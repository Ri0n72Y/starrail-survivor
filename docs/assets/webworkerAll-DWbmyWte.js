import{g as pr,u as Ye,a as Ie,B as Q,E as S,U as gr,T as Xe,b as mr,c as U,n as Y,d as de,M as I,G as bt,w as X,P as xr,f as yt,C as _r,h as D,j as T,v as C,k as fe,l as N,D as H,m as qe,F as vt,o as O,p as br,R as ie,I as yr,q as G,s as ne,t as k,x as vr,L as Sr,y as pe,z as wr,A as Ue,e as A,H as Tr}from"./index-VT8ED0on.js";const ge=Object.create(null),Ze=Object.create(null);function Oe(i,e){let t=Ze[i];return t===void 0&&(ge[e]===void 0&&(ge[e]=1),Ze[i]=t=ge[e]++),t}let ee;function Cr(){if(!ee){ee="mediump";const i=pr();i&&i.getShaderPrecisionFormat&&(ee=i.getShaderPrecisionFormat(i.FRAGMENT_SHADER,i.HIGH_FLOAT).precision?"highp":"mediump")}return ee}function Pr(i,e,t){return e?i:t?(i=i.replace("out vec4 finalColor;",""),`
        
        #ifdef GL_ES // This checks if it is WebGL1
        #define in varying
        #define finalColor gl_FragColor
        #define texture texture2D
        #endif
        ${i}
        `):`
        
        #ifdef GL_ES // This checks if it is WebGL1
        #define in attribute
        #define out varying
        #endif
        ${i}
        `}function Mr(i,e,t){const r=t?e.maxSupportedFragmentPrecision:e.maxSupportedVertexPrecision;if(i.substring(0,9)!=="precision"){let s=t?e.requestedFragmentPrecision:e.requestedVertexPrecision;return s==="highp"&&r!=="highp"&&(s="mediump"),`precision ${s} float;
${i}`}else if(r!=="highp"&&i.substring(0,15)==="precision highp")return i.replace("precision highp","precision mediump");return i}function Fr(i,e){return e?`#version 300 es
${i}`:i}const Br={},kr={};function Ar(i,{name:e="pixi-program"},t=!0){e=e.replace(/\s+/g,"-"),e+=t?"-fragment":"-vertex";const r=t?Br:kr;return r[e]?(r[e]++,e+=`-${r[e]}`):r[e]=1,i.indexOf("#define SHADER_NAME")!==-1?i:`${`#define SHADER_NAME ${e}`}
${i}`}function Rr(i,e){return e?i.replace("#version 300 es",""):i}const me={stripVersion:Rr,ensurePrecision:Mr,addProgramDefines:Pr,setProgramName:Ar,insertVersion:Fr},xe=Object.create(null),St=class Ge{constructor(e){e={...Ge.defaultOptions,...e};const t=e.fragment.indexOf("#version 300 es")!==-1,r={stripVersion:t,ensurePrecision:{requestedFragmentPrecision:e.preferredFragmentPrecision,requestedVertexPrecision:e.preferredVertexPrecision,maxSupportedVertexPrecision:"highp",maxSupportedFragmentPrecision:Cr()},setProgramName:{name:e.name},addProgramDefines:t,insertVersion:t};let s=e.fragment,n=e.vertex;Object.keys(me).forEach(a=>{const o=r[a];s=me[a](s,o,!0),n=me[a](n,o,!1)}),this.fragment=s,this.vertex=n,this._key=Oe(`${this.vertex}:${this.fragment}`,"gl-program")}destroy(){this.fragment=null,this.vertex=null,this._attributeData=null,this._uniformData=null,this._uniformBlockData=null,this.transformFeedbackVaryings=null}static from(e){const t=`${e.vertex}:${e.fragment}`;return xe[t]||(xe[t]=new Ge(e)),xe[t]}};St.defaultOptions={preferredVertexPrecision:"highp",preferredFragmentPrecision:"mediump"};let wt=St;const Je={uint8x2:{size:2,stride:2,normalised:!1},uint8x4:{size:4,stride:4,normalised:!1},sint8x2:{size:2,stride:2,normalised:!1},sint8x4:{size:4,stride:4,normalised:!1},unorm8x2:{size:2,stride:2,normalised:!0},unorm8x4:{size:4,stride:4,normalised:!0},snorm8x2:{size:2,stride:2,normalised:!0},snorm8x4:{size:4,stride:4,normalised:!0},uint16x2:{size:2,stride:4,normalised:!1},uint16x4:{size:4,stride:8,normalised:!1},sint16x2:{size:2,stride:4,normalised:!1},sint16x4:{size:4,stride:8,normalised:!1},unorm16x2:{size:2,stride:4,normalised:!0},unorm16x4:{size:4,stride:8,normalised:!0},snorm16x2:{size:2,stride:4,normalised:!0},snorm16x4:{size:4,stride:8,normalised:!0},float16x2:{size:2,stride:4,normalised:!1},float16x4:{size:4,stride:8,normalised:!1},float32:{size:1,stride:4,normalised:!1},float32x2:{size:2,stride:8,normalised:!1},float32x3:{size:3,stride:12,normalised:!1},float32x4:{size:4,stride:16,normalised:!1},uint32:{size:1,stride:4,normalised:!1},uint32x2:{size:2,stride:8,normalised:!1},uint32x3:{size:3,stride:12,normalised:!1},uint32x4:{size:4,stride:16,normalised:!1},sint32:{size:1,stride:4,normalised:!1},sint32x2:{size:2,stride:8,normalised:!1},sint32x3:{size:3,stride:12,normalised:!1},sint32x4:{size:4,stride:16,normalised:!1}};function Ur(i){return Je[i]??Je.float32}const Gr={f32:"float32","vec2<f32>":"float32x2","vec3<f32>":"float32x3","vec4<f32>":"float32x4",vec2f:"float32x2",vec3f:"float32x3",vec4f:"float32x4",i32:"sint32","vec2<i32>":"sint32x2","vec3<i32>":"sint32x3","vec4<i32>":"sint32x4",u32:"uint32","vec2<u32>":"uint32x2","vec3<u32>":"uint32x3","vec4<u32>":"uint32x4",bool:"uint32","vec2<bool>":"uint32x2","vec3<bool>":"uint32x3","vec4<bool>":"uint32x4"};function zr({source:i,entryPoint:e}){const t={},r=i.indexOf(`fn ${e}`);if(r!==-1){const s=i.indexOf("->",r);if(s!==-1){const n=i.substring(r,s),a=/@location\((\d+)\)\s+([a-zA-Z0-9_]+)\s*:\s*([a-zA-Z0-9_<>]+)(?:,|\s|$)/g;let o;for(;(o=a.exec(n))!==null;){const l=Gr[o[3]]??"float32";t[o[2]]={location:parseInt(o[1],10),format:l,stride:Ur(l).stride,offset:0,instance:!1,start:0}}}}return t}function _e(i){var h,d;const e=/(^|[^/])@(group|binding)\(\d+\)[^;]+;/g,t=/@group\((\d+)\)/,r=/@binding\((\d+)\)/,s=/var(<[^>]+>)? (\w+)/,n=/:\s*(\w+)/,a=/struct\s+(\w+)\s*{([^}]+)}/g,o=/(\w+)\s*:\s*([\w\<\>]+)/g,l=/struct\s+(\w+)/,u=(h=i.match(e))==null?void 0:h.map(f=>({group:parseInt(f.match(t)[1],10),binding:parseInt(f.match(r)[1],10),name:f.match(s)[2],isUniform:f.match(s)[1]==="<uniform>",type:f.match(n)[1]}));if(!u)return{groups:[],structs:[]};const c=((d=i.match(a))==null?void 0:d.map(f=>{const p=f.match(l)[1],g=f.match(o).reduce((m,_)=>{const[y,b]=_.split(":");return m[y.trim()]=b.trim(),m},{});return g?{name:p,members:g}:null}).filter(({name:f})=>u.some(p=>p.type===f)))??[];return{groups:u,structs:c}}var J=(i=>(i[i.VERTEX=1]="VERTEX",i[i.FRAGMENT=2]="FRAGMENT",i[i.COMPUTE=4]="COMPUTE",i))(J||{});function Wr({groups:i}){const e=[];for(let t=0;t<i.length;t++){const r=i[t];e[r.group]||(e[r.group]=[]),r.isUniform?e[r.group].push({binding:r.binding,visibility:J.VERTEX|J.FRAGMENT,buffer:{type:"uniform"}}):r.type==="sampler"?e[r.group].push({binding:r.binding,visibility:J.FRAGMENT,sampler:{type:"filtering"}}):r.type==="texture_2d"&&e[r.group].push({binding:r.binding,visibility:J.FRAGMENT,texture:{sampleType:"float",viewDimension:"2d",multisampled:!1}})}return e}function Ir({groups:i}){const e=[];for(let t=0;t<i.length;t++){const r=i[t];e[r.group]||(e[r.group]={}),e[r.group][r.name]=r.binding}return e}function Or(i,e){const t=new Set,r=new Set,s=[...i.structs,...e.structs].filter(a=>t.has(a.name)?!1:(t.add(a.name),!0)),n=[...i.groups,...e.groups].filter(a=>{const o=`${a.name}-${a.binding}`;return r.has(o)?!1:(r.add(o),!0)});return{structs:s,groups:n}}const be=Object.create(null);class ce{constructor(e){var o,l;this._layoutKey=0;const{fragment:t,vertex:r,layout:s,gpuLayout:n,name:a}=e;if(this.name=a,this.fragment=t,this.vertex=r,t.source===r.source){const u=_e(t.source);this.structsAndGroups=u}else{const u=_e(r.source),c=_e(t.source);this.structsAndGroups=Or(u,c)}this.layout=s??Ir(this.structsAndGroups),this.gpuLayout=n??Wr(this.structsAndGroups),this.autoAssignGlobalUniforms=((o=this.layout[0])==null?void 0:o.globalUniforms)!==void 0,this.autoAssignLocalUniforms=((l=this.layout[1])==null?void 0:l.localUniforms)!==void 0,this._generateProgramKey()}_generateProgramKey(){const{vertex:e,fragment:t}=this,r=e.source+t.source+e.entryPoint+t.entryPoint;this._layoutKey=Oe(r,"program")}get attributeData(){return this._attributeData??(this._attributeData=zr(this.vertex)),this._attributeData}destroy(){this.gpuLayout=null,this.layout=null,this.structsAndGroups=null,this.fragment=null,this.vertex=null}static from(e){const t=`${e.vertex.source}:${e.fragment.source}:${e.fragment.entryPoint}:${e.vertex.entryPoint}`;return be[t]||(be[t]=new ce(e)),be[t]}}const Tt=["f32","i32","vec2<f32>","vec3<f32>","vec4<f32>","mat2x2<f32>","mat3x3<f32>","mat4x4<f32>","mat3x2<f32>","mat4x2<f32>","mat2x3<f32>","mat4x3<f32>","mat2x4<f32>","mat3x4<f32>"],Er=Tt.reduce((i,e)=>(i[e]=!0,i),{});function Hr(i,e){switch(i){case"f32":return 0;case"vec2<f32>":return new Float32Array(2*e);case"vec3<f32>":return new Float32Array(3*e);case"vec4<f32>":return new Float32Array(4*e);case"mat2x2<f32>":return new Float32Array([1,0,0,1]);case"mat3x3<f32>":return new Float32Array([1,0,0,0,1,0,0,0,1]);case"mat4x4<f32>":return new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])}return null}const Ct=class Pt{constructor(e,t){this._touched=0,this.uid=Ye("uniform"),this._resourceType="uniformGroup",this._resourceId=Ye("resource"),this.isUniformGroup=!0,this._dirtyId=0,this.destroyed=!1,t={...Pt.defaultOptions,...t},this.uniformStructures=e;const r={};for(const s in e){const n=e[s];if(n.name=s,n.size=n.size??1,!Er[n.type])throw new Error(`Uniform type ${n.type} is not supported. Supported uniform types are: ${Tt.join(", ")}`);n.value??(n.value=Hr(n.type,n.size)),r[s]=n.value}this.uniforms=r,this._dirtyId=1,this.ubo=t.ubo,this.isStatic=t.isStatic,this._signature=Oe(Object.keys(r).map(s=>`${s}-${e[s].type}`).join("-"),"uniform-group")}update(){this._dirtyId++}};Ct.defaultOptions={ubo:!1,isStatic:!1};let j=Ct;var q=(i=>(i[i.WEBGL=1]="WEBGL",i[i.WEBGPU=2]="WEBGPU",i[i.BOTH=3]="BOTH",i))(q||{});class ue extends Ie{constructor(e){super(),this._uniformBindMap=Object.create(null),this._ownedBindGroups=[];let{gpuProgram:t,glProgram:r,groups:s,resources:n,compatibleRenderers:a,groupMap:o}=e;this.gpuProgram=t,this.glProgram=r,a===void 0&&(a=0,t&&(a|=q.WEBGPU),r&&(a|=q.WEBGL)),this.compatibleRenderers=a;const l={};if(!n&&!s&&(n={}),n&&s)throw new Error("[Shader] Cannot have both resources and groups");if(!t&&s&&!o)throw new Error("[Shader] No group map or WebGPU shader provided - consider using resources instead.");if(!t&&s&&o)for(const u in o)for(const c in o[u]){const h=o[u][c];l[h]={group:u,binding:c,name:h}}else if(t&&s&&!o){const u=t.structsAndGroups.groups;o={},u.forEach(c=>{o[c.group]=o[c.group]||{},o[c.group][c.binding]=c.name,l[c.name]=c})}else if(n){if(t){const u=t.structsAndGroups.groups;o={},u.forEach(c=>{o[c.group]=o[c.group]||{},o[c.group][c.binding]=c.name,l[c.name]=c})}else{o={},s={99:new Q},this._ownedBindGroups.push(s[99]);let u=0;for(const c in n)l[c]={group:99,binding:u,name:c},o[99]=o[99]||{},o[99][u]=c,u++}s={};for(const u in n){const c=u;let h=n[u];!h.source&&!h._resourceType&&(h=new j(h));const d=l[c];d&&(s[d.group]||(s[d.group]=new Q,this._ownedBindGroups.push(s[d.group])),s[d.group].setResource(h,d.binding))}}this.groups=s,this._uniformBindMap=o,this.resources=this._buildResourceAccessor(s,l)}addResource(e,t,r){var s,n;(s=this._uniformBindMap)[t]||(s[t]={}),(n=this._uniformBindMap[t])[r]||(n[r]=e),this.groups[t]||(this.groups[t]=new Q,this._ownedBindGroups.push(this.groups[t]))}_buildResourceAccessor(e,t){const r={};for(const s in t){const n=t[s];Object.defineProperty(r,n.name,{get(){return e[n.group].getResource(n.binding)},set(a){e[n.group].setResource(a,n.binding)}})}return r}destroy(e=!1){var t,r;this.emit("destroy",this),e&&((t=this.gpuProgram)==null||t.destroy(),(r=this.glProgram)==null||r.destroy()),this.gpuProgram=null,this.glProgram=null,this.removeAllListeners(),this._uniformBindMap=null,this._ownedBindGroups.forEach(s=>{s.destroy()}),this._ownedBindGroups=null,this.resources=null,this.groups=null}static from(e){const{gpu:t,gl:r,...s}=e;let n,a;return t&&(n=ce.from(t)),r&&(a=wt.from(r)),new ue({gpuProgram:n,glProgram:a,...s})}}const Lr={normal:0,add:1,multiply:2,screen:3,overlay:4,erase:5,"normal-npm":6,"add-npm":7,"screen-npm":8},ye=0,ve=1,Se=2,we=3,Te=4,Ce=5,ze=class Mt{constructor(){this.data=0,this.blendMode="normal",this.polygonOffset=0,this.blend=!0,this.depthMask=!0}get blend(){return!!(this.data&1<<ye)}set blend(e){!!(this.data&1<<ye)!==e&&(this.data^=1<<ye)}get offsets(){return!!(this.data&1<<ve)}set offsets(e){!!(this.data&1<<ve)!==e&&(this.data^=1<<ve)}set cullMode(e){if(e==="none"){this.culling=!1;return}this.culling=!0,this.clockwiseFrontFace=e==="front"}get cullMode(){return this.culling?this.clockwiseFrontFace?"front":"back":"none"}get culling(){return!!(this.data&1<<Se)}set culling(e){!!(this.data&1<<Se)!==e&&(this.data^=1<<Se)}get depthTest(){return!!(this.data&1<<we)}set depthTest(e){!!(this.data&1<<we)!==e&&(this.data^=1<<we)}get depthMask(){return!!(this.data&1<<Ce)}set depthMask(e){!!(this.data&1<<Ce)!==e&&(this.data^=1<<Ce)}get clockwiseFrontFace(){return!!(this.data&1<<Te)}set clockwiseFrontFace(e){!!(this.data&1<<Te)!==e&&(this.data^=1<<Te)}get blendMode(){return this._blendMode}set blendMode(e){this.blend=e!=="none",this._blendMode=e,this._blendModeId=Lr[e]||0}get polygonOffset(){return this._polygonOffset}set polygonOffset(e){this.offsets=!!e,this._polygonOffset=e}toString(){return`[pixi.js/core:State blendMode=${this.blendMode} clockwiseFrontFace=${this.clockwiseFrontFace} culling=${this.culling} depthMask=${this.depthMask} polygonOffset=${this.polygonOffset}]`}static for2d(){const e=new Mt;return e.depthTest=!1,e.blend=!0,e}};ze.default2d=ze.for2d();let Ft=ze;class Bt{static init(e){Object.defineProperty(this,"resizeTo",{set(t){globalThis.removeEventListener("resize",this.queueResize),this._resizeTo=t,t&&(globalThis.addEventListener("resize",this.queueResize),this.resize())},get(){return this._resizeTo}}),this.queueResize=()=>{this._resizeTo&&(this._cancelResize(),this._resizeId=requestAnimationFrame(()=>this.resize()))},this._cancelResize=()=>{this._resizeId&&(cancelAnimationFrame(this._resizeId),this._resizeId=null)},this.resize=()=>{if(!this._resizeTo)return;this._cancelResize();let t,r;if(this._resizeTo===globalThis.window)t=globalThis.innerWidth,r=globalThis.innerHeight;else{const{clientWidth:s,clientHeight:n}=this._resizeTo;t=s,r=n}this.renderer.resize(t,r),this.render()},this._resizeId=null,this._resizeTo=null,this.resizeTo=e.resizeTo||null}static destroy(){globalThis.removeEventListener("resize",this.queueResize),this._cancelResize(),this._cancelResize=null,this.queueResize=null,this.resizeTo=null,this.resize=null}}Bt.extension=S.Application;class kt{static init(e){e=Object.assign({autoStart:!0,sharedTicker:!1},e),Object.defineProperty(this,"ticker",{set(t){this._ticker&&this._ticker.remove(this.render,this),this._ticker=t,t&&t.add(this.render,this,gr.LOW)},get(){return this._ticker}}),this.stop=()=>{this._ticker.stop()},this.start=()=>{this._ticker.start()},this._ticker=null,this.ticker=e.sharedTicker?Xe.shared:new Xe,e.autoStart&&this.start()}static destroy(){if(this._ticker){const e=this._ticker;this.ticker=null,e.destroy()}}}kt.extension=S.Application;let Dr=0;class $r{constructor(e){this._poolKeyHash=Object.create(null),this._texturePool={},this.textureOptions=e||{},this.enableFullScreen=!1}createTexture(e,t,r){const s=new mr({...this.textureOptions,width:e,height:t,resolution:1,antialias:r,autoGarbageCollect:!0});return new U({source:s,label:`texturePool_${Dr++}`})}getOptimalTexture(e,t,r=1,s){let n=Math.ceil(e*r-1e-6),a=Math.ceil(t*r-1e-6);n=Y(n),a=Y(a);const o=(n<<17)+(a<<1)+(s?1:0);this._texturePool[o]||(this._texturePool[o]=[]);let l=this._texturePool[o].pop();return l||(l=this.createTexture(n,a,s)),l.source._resolution=r,l.source.width=n/r,l.source.height=a/r,l.source.pixelWidth=n,l.source.pixelHeight=a,l.frame.x=0,l.frame.y=0,l.frame.width=e,l.frame.height=t,l.updateUvs(),this._poolKeyHash[l.uid]=o,l}getSameSizeTexture(e,t=!1){const r=e.source;return this.getOptimalTexture(e.width,e.height,r._resolution,t)}returnTexture(e){const t=this._poolKeyHash[e.uid];this._texturePool[t].push(e)}clear(e){if(e=e!==!1,e)for(const t in this._texturePool){const r=this._texturePool[t];if(r)for(let s=0;s<r.length;s++)r[s].destroy(!0)}this._texturePool={}}}const W=new $r;class At{constructor(e){this._renderer=e}push(e,t,r){this._renderer.renderPipes.batch.break(r),r.add({renderPipeId:"filter",canBundle:!1,action:"pushFilter",container:t,filterEffect:e})}pop(e,t,r){this._renderer.renderPipes.batch.break(r),r.add({renderPipeId:"filter",action:"popFilter",canBundle:!1})}execute(e){e.action==="pushFilter"?this._renderer.filter.push(e):e.action==="popFilter"&&this._renderer.filter.pop()}destroy(){this._renderer=null}}At.extension={type:[S.WebGLPipes,S.WebGPUPipes,S.CanvasPipes],name:"filter"};const jr=new I;function Vr(i,e){return e.clear(),Rt(i,e),e.isValid||e.set(0,0,0,0),i.renderGroup?e.applyMatrix(i.renderGroup.localTransform):e.applyMatrix(i.parentRenderGroup.worldTransform),e}function Rt(i,e){if(i.localDisplayStatus!==7||!i.measurable)return;const t=!!i.effects.length;let r=e;if((i.renderGroup||t)&&(r=de.get().clear()),i.boundsArea)e.addRect(i.boundsArea,i.worldTransform);else{if(i.renderPipeId){const n=i.bounds;r.addFrame(n.minX,n.minY,n.maxX,n.maxY,i.groupTransform)}const s=i.children;for(let n=0;n<s.length;n++)Rt(s[n],r)}if(t){let s=!1;for(let n=0;n<i.effects.length;n++)i.effects[n].addBounds&&(s||(s=!0,r.applyMatrix(i.parentRenderGroup.worldTransform)),i.effects[n].addBounds(r,!0));s&&(r.applyMatrix(i.parentRenderGroup.worldTransform.copyTo(jr).invert()),e.addBounds(r,i.relativeGroupTransform)),e.addBounds(r),de.return(r)}else i.renderGroup&&(e.addBounds(r,i.relativeGroupTransform),de.return(r))}function Nr(i,e){e.clear();const t=e.matrix;for(let r=0;r<i.length;r++){const s=i[r];s.globalDisplayStatus<7||(e.matrix=s.worldTransform,s.addBounds(e))}return e.matrix=t,e}const Kr=new bt({attributes:{aPosition:{buffer:new Float32Array([0,0,1,0,1,1,0,1]),location:0,format:"float32x2",stride:2*4,offset:0}},indexBuffer:new Uint32Array([0,1,2,0,2,3])});class Ut{constructor(e){this._filterStackIndex=0,this._filterStack=[],this._filterGlobalUniforms=new j({uInputSize:{value:new Float32Array(4),type:"vec4<f32>"},uInputPixel:{value:new Float32Array(4),type:"vec4<f32>"},uInputClamp:{value:new Float32Array(4),type:"vec4<f32>"},uOutputFrame:{value:new Float32Array(4),type:"vec4<f32>"},uGlobalFrame:{value:new Float32Array(4),type:"vec4<f32>"},uOutputTexture:{value:new Float32Array(4),type:"vec4<f32>"}}),this._globalFilterBindGroup=new Q({}),this.renderer=e}get activeBackTexture(){var e;return(e=this._activeFilterData)==null?void 0:e.backTexture}push(e){var f;const t=this.renderer,r=e.filterEffect.filters;this._filterStack[this._filterStackIndex]||(this._filterStack[this._filterStackIndex]=this._getFilterData());const s=this._filterStack[this._filterStackIndex];if(this._filterStackIndex++,r.length===0){s.skip=!0;return}const n=s.bounds;e.renderables?Nr(e.renderables,n):e.filterEffect.filterArea?(n.clear(),n.addRect(e.filterEffect.filterArea),n.applyMatrix(e.container.worldTransform)):Vr(e.container,n);const a=t.renderTarget.rootRenderTarget.colorTexture.source;let o=a._resolution,l=0,u=a.antialias,c=!1,h=!1;for(let p=0;p<r.length;p++){const g=r[p];if(o=Math.min(o,g.resolution),l+=g.padding,g.antialias!=="inherit"&&(g.antialias==="on"?u=!0:u=!1),!!!(g.compatibleRenderers&t.type)){h=!1;break}if(g.blendRequired&&!(((f=t.backBuffer)==null?void 0:f.useBackBuffer)??!0)){X("Blend filter requires backBuffer on WebGL renderer to be enabled. Set `useBackBuffer: true` in the renderer options."),h=!1;break}h=g.enabled||h,c=c||g.blendRequired}if(!h){s.skip=!0;return}const d=t.renderTarget.rootViewPort;if(n.scale(o).fitBounds(0,d.width,0,d.height).scale(1/o).pad(l).ceil(),!n.isPositive){s.skip=!0;return}s.skip=!1,s.bounds=n,s.blendRequired=c,s.container=e.container,s.filterEffect=e.filterEffect,s.previousRenderSurface=t.renderTarget.renderSurface,s.inputTexture=W.getOptimalTexture(n.width,n.height,o,u),t.renderTarget.bind(s.inputTexture,!0),t.globalUniforms.push({offset:n})}pop(){const e=this.renderer;this._filterStackIndex--;const t=this._filterStack[this._filterStackIndex];if(t.skip)return;this._activeFilterData=t;const r=t.inputTexture,s=t.bounds;let n=U.EMPTY;if(e.renderTarget.finishRenderPass(),t.blendRequired){const o=this._filterStackIndex>0?this._filterStack[this._filterStackIndex-1].bounds:null,l=e.renderTarget.getRenderTarget(t.previousRenderSurface);n=this.getBackTexture(l,s,o)}t.backTexture=n;const a=t.filterEffect.filters;if(this._globalFilterBindGroup.setResource(r.source.style,2),this._globalFilterBindGroup.setResource(n.source,3),e.globalUniforms.pop(),a.length===1)a[0].apply(this,r,t.previousRenderSurface,!1),W.returnTexture(r);else{let o=t.inputTexture,l=W.getOptimalTexture(s.width,s.height,o.source._resolution,!1),u=0;for(u=0;u<a.length-1;++u){a[u].apply(this,o,l,!0);const h=o;o=l,l=h}a[u].apply(this,o,t.previousRenderSurface,!1),W.returnTexture(o),W.returnTexture(l)}t.blendRequired&&W.returnTexture(n)}getBackTexture(e,t,r){const s=e.colorTexture.source._resolution,n=W.getOptimalTexture(t.width,t.height,s,!1);let a=t.minX,o=t.minY;r&&(a-=r.minX,o-=r.minY),a=Math.floor(a*s),o=Math.floor(o*s);const l=Math.ceil(t.width*s),u=Math.ceil(t.height*s);return this.renderer.renderTarget.copyToTexture(e,n,{x:a,y:o},{width:l,height:u},{x:0,y:0}),n}applyFilter(e,t,r,s){const n=this.renderer,a=this._filterStack[this._filterStackIndex],o=a.bounds,l=xr.shared,c=a.previousRenderSurface===r;let h=this.renderer.renderTarget.rootRenderTarget.colorTexture.source._resolution,d=this._filterStackIndex-1;for(;d>0&&this._filterStack[d].skip;)--d;d>0&&(h=this._filterStack[d].inputTexture.source._resolution);const f=this._filterGlobalUniforms,p=f.uniforms,g=p.uOutputFrame,m=p.uInputSize,_=p.uInputPixel,y=p.uInputClamp,b=p.uGlobalFrame,v=p.uOutputTexture;if(c){let P=this._filterStackIndex;for(;P>0;){P--;const M=this._filterStack[this._filterStackIndex-1];if(!M.skip){l.x=M.bounds.minX,l.y=M.bounds.minY;break}}g[0]=o.minX-l.x,g[1]=o.minY-l.y}else g[0]=0,g[1]=0;g[2]=t.frame.width,g[3]=t.frame.height,m[0]=t.source.width,m[1]=t.source.height,m[2]=1/m[0],m[3]=1/m[1],_[0]=t.source.pixelWidth,_[1]=t.source.pixelHeight,_[2]=1/_[0],_[3]=1/_[1],y[0]=.5*_[2],y[1]=.5*_[3],y[2]=t.frame.width*m[2]-.5*_[2],y[3]=t.frame.height*m[3]-.5*_[3];const w=this.renderer.renderTarget.rootRenderTarget.colorTexture;b[0]=l.x*h,b[1]=l.y*h,b[2]=w.source.width*h,b[3]=w.source.height*h;const F=this.renderer.renderTarget.getRenderTarget(r);if(n.renderTarget.bind(r,!!s),r instanceof U?(v[0]=r.frame.width,v[1]=r.frame.height):(v[0]=F.width,v[1]=F.height),v[2]=F.isRoot?-1:1,f.update(),n.renderPipes.uniformBatch){const P=n.renderPipes.uniformBatch.getUboResource(f);this._globalFilterBindGroup.setResource(P,0)}else this._globalFilterBindGroup.setResource(f,0);this._globalFilterBindGroup.setResource(t.source,1),this._globalFilterBindGroup.setResource(t.source.style,2),e.groups[0]=this._globalFilterBindGroup,n.encoder.draw({geometry:Kr,shader:e,state:e._state,topology:"triangle-list"}),n.type===q.WEBGL&&n.renderTarget.finishRenderPass()}_getFilterData(){return{skip:!1,inputTexture:null,bounds:new yt,container:null,filterEffect:null,blendRequired:!1,previousRenderSurface:null}}calculateSpriteMatrix(e,t){const r=this._activeFilterData,s=e.set(r.inputTexture._source.width,0,0,r.inputTexture._source.height,r.bounds.minX,r.bounds.minY),n=t.worldTransform.copyTo(I.shared);return n.invert(),s.prepend(n),s.scale(1/t.texture.frame.width,1/t.texture.frame.height),s.translate(t.anchor.x,t.anchor.y),s}}Ut.extension={type:[S.WebGLSystem,S.WebGPUSystem],name:"filter"};class ae extends _r{constructor(e){e instanceof D&&(e={context:e});const{context:t,roundPixels:r,...s}=e||{};super({label:"Graphics",...s}),this.canBundle=!0,this.renderPipeId="graphics",this._roundPixels=0,t?this._context=t:this._context=this._ownedContext=new D,this._context.on("update",this.onViewUpdate,this),this.allowChildren=!1,this.roundPixels=r??!1}set context(e){e!==this._context&&(this._context.off("update",this.onViewUpdate,this),this._context=e,this._context.on("update",this.onViewUpdate,this),this.onViewUpdate())}get context(){return this._context}get bounds(){return this._context.bounds}addBounds(e){e.addBounds(this._context.bounds)}containsPoint(e){return this._context.containsPoint(e)}get roundPixels(){return!!this._roundPixels}set roundPixels(e){this._roundPixels=e?1:0}onViewUpdate(){if(this._didChangeId+=4096,this._didGraphicsUpdate=!0,this.didViewUpdate)return;this.didViewUpdate=!0;const e=this.renderGroup||this.parentRenderGroup;e&&e.onChildViewUpdate(this)}destroy(e){this._ownedContext&&!e?this._ownedContext.destroy(e):(e===!0||(e==null?void 0:e.context)===!0)&&this._context.destroy(e),this._ownedContext=null,this._context=null,super.destroy(e)}_callContextMethod(e,t){return this.context[e](...t),this}setFillStyle(...e){return this._callContextMethod("setFillStyle",e)}setStrokeStyle(...e){return this._callContextMethod("setStrokeStyle",e)}fill(...e){return this._callContextMethod("fill",e)}stroke(...e){return this._callContextMethod("stroke",e)}texture(...e){return this._callContextMethod("texture",e)}beginPath(){return this._callContextMethod("beginPath",[])}cut(){return this._callContextMethod("cut",[])}arc(...e){return this._callContextMethod("arc",e)}arcTo(...e){return this._callContextMethod("arcTo",e)}arcToSvg(...e){return this._callContextMethod("arcToSvg",e)}bezierCurveTo(...e){return this._callContextMethod("bezierCurveTo",e)}closePath(){return this._callContextMethod("closePath",[])}ellipse(...e){return this._callContextMethod("ellipse",e)}circle(...e){return this._callContextMethod("circle",e)}path(...e){return this._callContextMethod("path",e)}lineTo(...e){return this._callContextMethod("lineTo",e)}moveTo(...e){return this._callContextMethod("moveTo",e)}quadraticCurveTo(...e){return this._callContextMethod("quadraticCurveTo",e)}rect(...e){return this._callContextMethod("rect",e)}roundRect(...e){return this._callContextMethod("roundRect",e)}poly(...e){return this._callContextMethod("poly",e)}regularPoly(...e){return this._callContextMethod("regularPoly",e)}roundPoly(...e){return this._callContextMethod("roundPoly",e)}roundShape(...e){return this._callContextMethod("roundShape",e)}filletRect(...e){return this._callContextMethod("filletRect",e)}chamferRect(...e){return this._callContextMethod("chamferRect",e)}star(...e){return this._callContextMethod("star",e)}svg(...e){return this._callContextMethod("svg",e)}restore(...e){return this._callContextMethod("restore",e)}save(){return this._callContextMethod("save",[])}getTransform(){return this.context.getTransform()}resetTransform(){return this._callContextMethod("resetTransform",[])}rotateTransform(...e){return this._callContextMethod("rotate",e)}scaleTransform(...e){return this._callContextMethod("scale",e)}setTransform(...e){return this._callContextMethod("setTransform",e)}transform(...e){return this._callContextMethod("transform",e)}translateTransform(...e){return this._callContextMethod("translate",e)}clear(){return this._callContextMethod("clear",[])}get fillStyle(){return this._context.fillStyle}set fillStyle(e){this._context.fillStyle=e}get strokeStyle(){return this._context.strokeStyle}set strokeStyle(e){this._context.strokeStyle=e}clone(e=!1){return e?new ae(this._context.clone()):(this._ownedContext=null,new ae(this._context))}lineStyle(e,t,r){T(C,"Graphics#lineStyle is no longer needed. Use Graphics#setStrokeStyle to set the stroke style.");const s={};return e&&(s.width=e),t&&(s.color=t),r&&(s.alpha=r),this.context.strokeStyle=s,this}beginFill(e,t){T(C,"Graphics#beginFill is no longer needed. Use Graphics#fill to fill the shape with the desired style.");const r={};return e&&(r.color=e),t&&(r.alpha=t),this.context.fillStyle=r,this}endFill(){T(C,"Graphics#endFill is no longer needed. Use Graphics#fill to fill the shape with the desired style."),this.context.fill();const e=this.context.strokeStyle;return(e.width!==D.defaultStrokeStyle.width||e.color!==D.defaultStrokeStyle.color||e.alpha!==D.defaultStrokeStyle.alpha)&&this.context.stroke(),this}drawCircle(...e){return T(C,"Graphics#drawCircle has been renamed to Graphics#circle"),this._callContextMethod("circle",e)}drawEllipse(...e){return T(C,"Graphics#drawEllipse has been renamed to Graphics#ellipse"),this._callContextMethod("ellipse",e)}drawPolygon(...e){return T(C,"Graphics#drawPolygon has been renamed to Graphics#poly"),this._callContextMethod("poly",e)}drawRect(...e){return T(C,"Graphics#drawRect has been renamed to Graphics#rect"),this._callContextMethod("rect",e)}drawRoundedRect(...e){return T(C,"Graphics#drawRoundedRect has been renamed to Graphics#roundRect"),this._callContextMethod("roundRect",e)}drawStar(...e){return T(C,"Graphics#drawStar has been renamed to Graphics#star"),this._callContextMethod("star",e)}}const Gt=class zt extends bt{constructor(...e){let t=e[0]??{};t instanceof Float32Array&&(T(C,"use new MeshGeometry({ positions, uvs, indices }) instead"),t={positions:t,uvs:e[1],indices:e[2]}),t={...zt.defaultOptions,...t};const r=t.positions||new Float32Array([0,0,1,0,1,1,0,1]),s=t.uvs||new Float32Array([0,0,1,0,1,1,0,1]),n=t.indices||new Uint32Array([0,1,2,0,2,3]),a=t.shrinkBuffersToFit,o=new fe({data:r,label:"attribute-mesh-positions",shrinkToFit:a,usage:N.VERTEX|N.COPY_DST}),l=new fe({data:s,label:"attribute-mesh-uvs",shrinkToFit:a,usage:N.VERTEX|N.COPY_DST}),u=new fe({data:n,label:"index-mesh-buffer",shrinkToFit:a,usage:N.INDEX|N.COPY_DST});super({attributes:{aPosition:{buffer:o,format:"float32x2",stride:2*4,offset:0},aUV:{buffer:l,format:"float32x2",stride:2*4,offset:0}},indexBuffer:u,topology:t.topology}),this.batchMode="auto"}get positions(){return this.attributes.aPosition.buffer.data}set positions(e){this.attributes.aPosition.buffer.data=e}get uvs(){return this.attributes.aUV.buffer.data}set uvs(e){this.attributes.aUV.buffer.data=e}get indices(){return this.indexBuffer.data}set indices(e){this.indexBuffer.data=e}};Gt.defaultOptions={topology:"triangle-list",shrinkBuffersToFit:!1};let Ee=Gt;const Yr=["serif","sans-serif","monospace","cursive","fantasy","system-ui"];function oe(i){const e=typeof i.fontSize=="number"?`${i.fontSize}px`:i.fontSize;let t=i.fontFamily;Array.isArray(i.fontFamily)||(t=i.fontFamily.split(","));for(let r=t.length-1;r>=0;r--){let s=t[r].trim();!/([\"\'])[^\'\"]+\1/.test(s)&&!Yr.includes(s)&&(s=`"${s}"`),t[r]=s}return`${i.fontStyle} ${i.fontVariant} ${i.fontWeight} ${e} ${t.join(",")}`}const Pe={willReadFrequently:!0},z=class x{static get experimentalLetterSpacingSupported(){let e=x._experimentalLetterSpacingSupported;if(e!==void 0){const t=H.get().getCanvasRenderingContext2D().prototype;e=x._experimentalLetterSpacingSupported="letterSpacing"in t||"textLetterSpacing"in t}return e}constructor(e,t,r,s,n,a,o,l,u){this.text=e,this.style=t,this.width=r,this.height=s,this.lines=n,this.lineWidths=a,this.lineHeight=o,this.maxLineWidth=l,this.fontProperties=u}static measureText(e=" ",t,r=x._canvas,s=t.wordWrap){var y;const n=`${e}:${t.styleKey}`;if(x._measurementCache[n])return x._measurementCache[n];const a=oe(t),o=x.measureFont(a);o.fontSize===0&&(o.fontSize=t.fontSize,o.ascent=t.fontSize);const l=x.__context;l.font=a;const c=(s?x._wordWrap(e,t,r):e).split(/(?:\r\n|\r|\n)/),h=new Array(c.length);let d=0;for(let b=0;b<c.length;b++){const v=x._measureText(c[b],t.letterSpacing,l);h[b]=v,d=Math.max(d,v)}const f=((y=t._stroke)==null?void 0:y.width)||0;let p=d+f;t.dropShadow&&(p+=t.dropShadow.distance);const g=t.lineHeight||o.fontSize+f;let m=Math.max(g,o.fontSize+f*2)+(c.length-1)*(g+t.leading);return t.dropShadow&&(m+=t.dropShadow.distance),new x(e,t,p,m,c,h,g+t.leading,d,o)}static _measureText(e,t,r){let s=!1;x.experimentalLetterSpacingSupported&&(x.experimentalLetterSpacing?(r.letterSpacing=`${t}px`,r.textLetterSpacing=`${t}px`,s=!0):(r.letterSpacing="0px",r.textLetterSpacing="0px"));let n=r.measureText(e).width;return n>0&&(s?n-=t:n+=(x.graphemeSegmenter(e).length-1)*t),n}static _wordWrap(e,t,r=x._canvas){const s=r.getContext("2d",Pe);let n=0,a="",o="";const l=Object.create(null),{letterSpacing:u,whiteSpace:c}=t,h=x._collapseSpaces(c),d=x._collapseNewlines(c);let f=!h;const p=t.wordWrapWidth+u,g=x._tokenize(e);for(let m=0;m<g.length;m++){let _=g[m];if(x._isNewline(_)){if(!d){o+=x._addLine(a),f=!h,a="",n=0;continue}_=" "}if(h){const b=x.isBreakingSpace(_),v=x.isBreakingSpace(a[a.length-1]);if(b&&v)continue}const y=x._getFromCache(_,u,l,s);if(y>p)if(a!==""&&(o+=x._addLine(a),a="",n=0),x.canBreakWords(_,t.breakWords)){const b=x.wordWrapSplit(_);for(let v=0;v<b.length;v++){let w=b[v],F=w,P=1;for(;b[v+P];){const R=b[v+P];if(!x.canBreakChars(F,R,_,v,t.breakWords))w+=R;else break;F=R,P++}v+=P-1;const M=x._getFromCache(w,u,l,s);M+n>p&&(o+=x._addLine(a),f=!1,a="",n=0),a+=w,n+=M}}else{a.length>0&&(o+=x._addLine(a),a="",n=0);const b=m===g.length-1;o+=x._addLine(_,!b),f=!1,a="",n=0}else y+n>p&&(f=!1,o+=x._addLine(a),a="",n=0),(a.length>0||!x.isBreakingSpace(_)||f)&&(a+=_,n+=y)}return o+=x._addLine(a,!1),o}static _addLine(e,t=!0){return e=x._trimRight(e),e=t?`${e}
`:e,e}static _getFromCache(e,t,r,s){let n=r[e];return typeof n!="number"&&(n=x._measureText(e,t,s)+t,r[e]=n),n}static _collapseSpaces(e){return e==="normal"||e==="pre-line"}static _collapseNewlines(e){return e==="normal"}static _trimRight(e){if(typeof e!="string")return"";for(let t=e.length-1;t>=0;t--){const r=e[t];if(!x.isBreakingSpace(r))break;e=e.slice(0,-1)}return e}static _isNewline(e){return typeof e!="string"?!1:x._newlines.includes(e.charCodeAt(0))}static isBreakingSpace(e,t){return typeof e!="string"?!1:x._breakingSpaces.includes(e.charCodeAt(0))}static _tokenize(e){const t=[];let r="";if(typeof e!="string")return t;for(let s=0;s<e.length;s++){const n=e[s],a=e[s+1];if(x.isBreakingSpace(n,a)||x._isNewline(n)){r!==""&&(t.push(r),r=""),t.push(n);continue}r+=n}return r!==""&&t.push(r),t}static canBreakWords(e,t){return t}static canBreakChars(e,t,r,s,n){return!0}static wordWrapSplit(e){return x.graphemeSegmenter(e)}static measureFont(e){if(x._fonts[e])return x._fonts[e];const t=x._context;t.font=e;const r=t.measureText(x.METRICS_STRING+x.BASELINE_SYMBOL),s={ascent:r.actualBoundingBoxAscent,descent:r.actualBoundingBoxDescent,fontSize:r.actualBoundingBoxAscent+r.actualBoundingBoxDescent};return x._fonts[e]=s,s}static clearMetrics(e=""){e?delete x._fonts[e]:x._fonts={}}static get _canvas(){if(!x.__canvas){let e;try{const t=new OffscreenCanvas(0,0),r=t.getContext("2d",Pe);if(r!=null&&r.measureText)return x.__canvas=t,t;e=H.get().createCanvas()}catch{e=H.get().createCanvas()}e.width=e.height=10,x.__canvas=e}return x.__canvas}static get _context(){return x.__context||(x.__context=x._canvas.getContext("2d",Pe)),x.__context}};z.METRICS_STRING="|ÉqÅ";z.BASELINE_SYMBOL="M";z.BASELINE_MULTIPLIER=1.4;z.HEIGHT_MULTIPLIER=2;z.graphemeSegmenter=(()=>{if(typeof(Intl==null?void 0:Intl.Segmenter)=="function"){const i=new Intl.Segmenter;return e=>[...i.segment(e)].map(t=>t.segment)}return i=>[...i]})();z.experimentalLetterSpacing=!1;z._fonts={};z._newlines=[10,13];z._breakingSpaces=[9,32,8192,8193,8194,8195,8196,8197,8198,8200,8201,8202,8287,12288];z._measurementCache={};let E=z;const Qe=["_fontFamily","_fontStyle","_fontSize","_fontVariant","_fontWeight","_breakWords","_align","_leading","_letterSpacing","_lineHeight","_textBaseline","_whiteSpace","_wordWrap","_wordWrapWidth","_padding","_cssOverrides","_trim"];function Wt(i){const e=[];let t=0;for(let r=0;r<Qe.length;r++){const s=Qe[r];e[t++]=i[s]}return t=It(i._fill,e,t),t=Xr(i._stroke,e,t),e.join("-")}function It(i,e,t){var r;return i&&(e[t++]=i.color,e[t++]=i.alpha,e[t++]=(r=i.fill)==null?void 0:r.uid),t}function Xr(i,e,t){return i&&(t=It(i,e,t),e[t++]=i.width,e[t++]=i.alignment,e[t++]=i.cap,e[t++]=i.join,e[t++]=i.miterLimit),t}const He=class K extends Ie{constructor(e={}){super(),qr(e);const t={...K.defaultTextStyle,...e};for(const r in t){const s=r;this[s]=t[r]}this.update()}get align(){return this._align}set align(e){this._align=e,this.update()}get breakWords(){return this._breakWords}set breakWords(e){this._breakWords=e,this.update()}get dropShadow(){return this._dropShadow}set dropShadow(e){e!==null&&typeof e=="object"?this._dropShadow={...K.defaultDropShadow,...e}:this._dropShadow=e?{...K.defaultDropShadow}:null,this.update()}get fontFamily(){return this._fontFamily}set fontFamily(e){this._fontFamily=e,this.update()}get fontSize(){return this._fontSize}set fontSize(e){typeof e=="string"?this._fontSize=parseInt(e,10):this._fontSize=e,this.update()}get fontStyle(){return this._fontStyle}set fontStyle(e){this._fontStyle=e,this.update()}get fontVariant(){return this._fontVariant}set fontVariant(e){this._fontVariant=e,this.update()}get fontWeight(){return this._fontWeight}set fontWeight(e){this._fontWeight=e,this.update()}get leading(){return this._leading}set leading(e){this._leading=e,this.update()}get letterSpacing(){return this._letterSpacing}set letterSpacing(e){this._letterSpacing=e,this.update()}get lineHeight(){return this._lineHeight}set lineHeight(e){this._lineHeight=e,this.update()}get padding(){return this._padding}set padding(e){this._padding=e,this.update()}get trim(){return this._trim}set trim(e){this._trim=e,this.update()}get textBaseline(){return this._textBaseline}set textBaseline(e){this._textBaseline=e,this.update()}get whiteSpace(){return this._whiteSpace}set whiteSpace(e){this._whiteSpace=e,this.update()}get wordWrap(){return this._wordWrap}set wordWrap(e){this._wordWrap=e,this.update()}get wordWrapWidth(){return this._wordWrapWidth}set wordWrapWidth(e){this._wordWrapWidth=e,this.update()}get fill(){return this._originalFill}set fill(e){e!==this._originalFill&&(this._originalFill=e,this._fill=qe(e===0?"black":e,D.defaultFillStyle),this.update())}get stroke(){return this._originalStroke}set stroke(e){e!==this._originalStroke&&(this._originalStroke=e,this._stroke=qe(e,D.defaultStrokeStyle),this.update())}_generateKey(){return this._styleKey=Wt(this),this._styleKey}update(){this._styleKey=null,this.emit("update",this)}reset(){const e=K.defaultTextStyle;for(const t in e)this[t]=e[t]}get styleKey(){return this._styleKey||this._generateKey()}clone(){return new K({align:this.align,breakWords:this.breakWords,dropShadow:this.dropShadow,fill:this._fill,fontFamily:this.fontFamily,fontSize:this.fontSize,fontStyle:this.fontStyle,fontVariant:this.fontVariant,fontWeight:this.fontWeight,leading:this.leading,letterSpacing:this.letterSpacing,lineHeight:this.lineHeight,padding:this.padding,stroke:this._stroke,textBaseline:this.textBaseline,whiteSpace:this.whiteSpace,wordWrap:this.wordWrap,wordWrapWidth:this.wordWrapWidth})}destroy(e=!1){var r,s,n,a;if(this.removeAllListeners(),typeof e=="boolean"?e:e==null?void 0:e.texture){const o=typeof e=="boolean"?e:e==null?void 0:e.textureSource;(r=this._fill)!=null&&r.texture&&this._fill.texture.destroy(o),(s=this._originalFill)!=null&&s.texture&&this._originalFill.texture.destroy(o),(n=this._stroke)!=null&&n.texture&&this._stroke.texture.destroy(o),(a=this._originalStroke)!=null&&a.texture&&this._originalStroke.texture.destroy(o)}this._fill=null,this._stroke=null,this.dropShadow=null,this._originalStroke=null,this._originalFill=null}};He.defaultDropShadow={alpha:1,angle:Math.PI/6,blur:0,color:"black",distance:5};He.defaultTextStyle={align:"left",breakWords:!1,dropShadow:null,fill:"black",fontFamily:"Arial",fontSize:26,fontStyle:"normal",fontVariant:"normal",fontWeight:"normal",leading:0,letterSpacing:0,lineHeight:0,padding:0,stroke:null,textBaseline:"alphabetic",trim:!1,whiteSpace:"pre",wordWrap:!1,wordWrapWidth:100};let Z=He;function qr(i){const e=i;if(typeof e.dropShadow=="boolean"&&e.dropShadow){const t=Z.defaultDropShadow;i.dropShadow={alpha:e.dropShadowAlpha??t.alpha,angle:e.dropShadowAngle??t.angle,blur:e.dropShadowBlur??t.blur,color:e.dropShadowColor??t.color,distance:e.dropShadowDistance??t.distance}}if(e.strokeThickness!==void 0){T(C,"strokeThickness is now a part of stroke");const t=e.stroke;i.stroke={color:t,width:e.strokeThickness}}if(Array.isArray(e.fill)){T(C,"gradient fill is now a fill pattern: `new FillGradient(...)`");const t=new vt(0,0,0,i.fontSize*1.7),r=e.fill.map(s=>O.shared.setValue(s).toNumber());r.forEach((s,n)=>{const a=e.fillGradientStops[n]??n/r.length;t.addColorStop(a,s)}),i.fill={fill:t}}}class Zr{constructor(e){this._canvasPool=Object.create(null),this.canvasOptions=e||{},this.enableFullScreen=!1}_createCanvasAndContext(e,t){const r=H.get().createCanvas();r.width=e,r.height=t;const s=r.getContext("2d");return{canvas:r,context:s}}getOptimalCanvasAndContext(e,t,r=1){e=Math.ceil(e*r-1e-6),t=Math.ceil(t*r-1e-6),e=Y(e),t=Y(t);const s=(e<<17)+(t<<1);this._canvasPool[s]||(this._canvasPool[s]=[]);let n=this._canvasPool[s].pop();return n||(n=this._createCanvasAndContext(e,t)),n}returnCanvasAndContext(e){const{width:t,height:r}=e.canvas,s=(t<<17)+(r<<1);this._canvasPool[s].push(e)}clear(){this._canvasPool={}}}const $=new Zr;function le(i,e){if(i.texture===U.WHITE&&!i.fill)return O.shared.setValue(i.color).toHex();if(i.fill){if(i.fill instanceof br){const t=i.fill,r=e.createPattern(t.texture.source.resource,"repeat"),s=t.transform.copyTo(I.shared);return s.scale(t.texture.frame.width,t.texture.frame.height),r.setTransform(s),r}else if(i.fill instanceof vt){const t=i.fill;if(t.type==="linear"){const r=e.createLinearGradient(t.x0,t.y0,t.x1,t.y1);return t.gradientStops.forEach(s=>{r.addColorStop(s.offset,O.shared.setValue(s.color).toHex())}),r}}}else{const t=e.createPattern(i.texture.source.resource,"repeat"),r=i.matrix.copyTo(I.shared);return r.scale(i.texture.frame.width,i.texture.frame.height),t.setTransform(r),t}return X("FillStyle not recognised",i),"red"}class Ot extends Ie{constructor(){super(...arguments),this.chars=Object.create(null),this.lineHeight=0,this.fontFamily="",this.fontMetrics={fontSize:0,ascent:0,descent:0},this.baseLineOffset=0,this.distanceField={type:"none",range:0},this.pages=[],this.baseMeasurementFontSize=100,this.baseRenderedFontSize=100}get font(){return T(C,"BitmapFont.font is deprecated, please use BitmapFont.fontFamily instead."),this.fontFamily}get pageTextures(){return T(C,"BitmapFont.pageTextures is deprecated, please use BitmapFont.pages instead."),this.pages}get size(){return T(C,"BitmapFont.size is deprecated, please use BitmapFont.fontMetrics.fontSize instead."),this.fontMetrics.fontSize}get distanceFieldRange(){return T(C,"BitmapFont.distanceFieldRange is deprecated, please use BitmapFont.distanceField.range instead."),this.distanceField.range}get distanceFieldType(){return T(C,"BitmapFont.distanceFieldType is deprecated, please use BitmapFont.distanceField.type instead."),this.distanceField.type}destroy(e=!1){this.emit("destroy",this),this.removeAllListeners();for(const t in this.chars)this.chars[t].texture.destroy();this.chars=null,e&&(this.pages.forEach(t=>t.texture.destroy(!0)),this.pages=null)}}function Et(i){if(i==="")return[];typeof i=="string"&&(i=[i]);const e=[];for(let t=0,r=i.length;t<r;t++){const s=i[t];if(Array.isArray(s)){if(s.length!==2)throw new Error(`[BitmapFont]: Invalid character range length, expecting 2 got ${s.length}.`);if(s[0].length===0||s[1].length===0)throw new Error("[BitmapFont]: Invalid character delimiter.");const n=s[0].charCodeAt(0),a=s[1].charCodeAt(0);if(a<n)throw new Error("[BitmapFont]: Invalid character range.");for(let o=n,l=a;o<=l;o++)e.push(String.fromCharCode(o))}else e.push(...Array.from(s))}if(e.length===0)throw new Error("[BitmapFont]: Empty set when resolving characters.");return e}class et extends Ot{constructor(e){super(),this.resolution=1,this.pages=[],this._padding=4,this._measureCache=Object.create(null),this._currentChars=[],this._currentX=0,this._currentY=0,this._currentPageIndex=-1,this._skipKerning=!1;const t=e,r=t.style.clone();t.overrideFill&&(r._fill.color=16777215,r._fill.alpha=1,r._fill.texture=U.WHITE,r._fill.fill=null);const s=r.fontSize;r.fontSize=this.baseMeasurementFontSize;const n=oe(r);t.overrideSize?r._stroke&&(r._stroke.width*=this.baseRenderedFontSize/s):r.fontSize=this.baseRenderedFontSize=s,this._style=r,this._skipKerning=t.skipKerning??!1,this.resolution=t.resolution??1,this._padding=t.padding??4,this.fontMetrics=E.measureFont(n),this.lineHeight=r.lineHeight||this.fontMetrics.fontSize||r.fontSize}ensureCharacters(e){var g,m;const t=Et(e).filter(_=>!this._currentChars.includes(_)).filter((_,y,b)=>b.indexOf(_)===y);if(!t.length)return;this._currentChars=[...this._currentChars,...t];let r;this._currentPageIndex===-1?r=this._nextPage():r=this.pages[this._currentPageIndex];let{canvas:s,context:n}=r.canvasAndContext,a=r.texture.source;const o=this._style;let l=this._currentX,u=this._currentY;const c=this.baseRenderedFontSize/this.baseMeasurementFontSize,h=this._padding*c,d=o.fontStyle==="italic"?2:1;let f=0,p=!1;for(let _=0;_<t.length;_++){const y=t[_],b=E.measureText(y,o,s,!1);b.lineHeight=b.height;const v=d*b.width*c,w=b.height*c,F=v+h*2,P=w+h*2;if(p=!1,y!==`
`&&y!=="\r"&&y!=="	"&&y!==" "&&(p=!0,f=Math.ceil(Math.max(P,f))),l+F>512&&(u+=f,f=P,l=0,u+f>512)){a.update();const R=this._nextPage();s=R.canvasAndContext.canvas,n=R.canvasAndContext.context,a=R.texture.source,u=0}const M=v/c-(((g=o.dropShadow)==null?void 0:g.distance)??0)-(((m=o._stroke)==null?void 0:m.width)??0);if(this.chars[y]={id:y.codePointAt(0),xOffset:-this._padding,yOffset:-this._padding,xAdvance:M,kerning:{}},p){this._drawGlyph(n,b,l+h,u+h,c,o);const R=a.width*c,V=a.height*c,he=new ie(l/R*a.width,u/V*a.height,F/R*a.width,P/V*a.height);this.chars[y].texture=new U({source:a,frame:he}),l+=Math.ceil(F)}}a.update(),this._currentX=l,this._currentY=u,this._skipKerning&&this._applyKerning(t,n)}get pageTextures(){return T(C,"BitmapFont.pageTextures is deprecated, please use BitmapFont.pages instead."),this.pages}_applyKerning(e,t){const r=this._measureCache;for(let s=0;s<e.length;s++){const n=e[s];for(let a=0;a<this._currentChars.length;a++){const o=this._currentChars[a];let l=r[n];l||(l=r[n]=t.measureText(n).width);let u=r[o];u||(u=r[o]=t.measureText(o).width);let c=t.measureText(n+o).width,h=c-(l+u);h&&(this.chars[n].kerning[o]=h),c=t.measureText(n+o).width,h=c-(l+u),h&&(this.chars[o].kerning[n]=h)}}}_nextPage(){this._currentPageIndex++;const e=this.resolution,t=$.getOptimalCanvasAndContext(512,512,e);this._setupContext(t.context,this._style,e);const r=e*(this.baseRenderedFontSize/this.baseMeasurementFontSize),s=new U({source:new yr({resource:t.canvas,resolution:r,alphaMode:"premultiply-alpha-on-upload"})}),n={canvasAndContext:t,texture:s};return this.pages[this._currentPageIndex]=n,n}_setupContext(e,t,r){t.fontSize=this.baseRenderedFontSize,e.scale(r,r),e.font=oe(t),t.fontSize=this.baseMeasurementFontSize,e.textBaseline=t.textBaseline;const s=t._stroke,n=(s==null?void 0:s.width)??0;if(s&&(e.lineWidth=n,e.lineJoin=s.join,e.miterLimit=s.miterLimit,e.strokeStyle=le(s,e)),t._fill&&(e.fillStyle=le(t._fill,e)),t.dropShadow){const a=t.dropShadow,o=O.shared.setValue(a.color).toArray(),l=a.blur*r,u=a.distance*r;e.shadowColor=`rgba(${o[0]*255},${o[1]*255},${o[2]*255},${a.alpha})`,e.shadowBlur=l,e.shadowOffsetX=Math.cos(a.angle)*u,e.shadowOffsetY=Math.sin(a.angle)*u}else e.shadowColor="black",e.shadowBlur=0,e.shadowOffsetX=0,e.shadowOffsetY=0}_drawGlyph(e,t,r,s,n,a){const o=t.text,l=t.fontProperties,u=a._stroke,c=((u==null?void 0:u.width)??0)*n,h=r+c/2,d=s-c/2,f=l.descent*n,p=t.lineHeight*n;a.stroke&&c&&e.strokeText(o,h,d+p-f),a._fill&&e.fillText(o,h,d+p-f)}destroy(){super.destroy();for(let e=0;e<this.pages.length;e++){const{canvasAndContext:t,texture:r}=this.pages[e];$.returnCanvasAndContext(t),r.destroy(!0)}this.pages=null}}function Ht(i,e,t){const r={width:0,height:0,offsetY:0,scale:e.fontSize/t.baseMeasurementFontSize,lines:[{width:0,charPositions:[],spaceWidth:0,spacesIndex:[],chars:[]}]};r.offsetY=t.baseLineOffset;let s=r.lines[0],n=null,a=!0;const o={spaceWord:!1,width:0,start:0,index:0,positions:[],chars:[]},l=f=>{const p=s.width;for(let g=0;g<o.index;g++){const m=f.positions[g];s.chars.push(f.chars[g]),s.charPositions.push(m+p)}s.width+=f.width,a=!1,o.width=0,o.index=0,o.chars.length=0},u=()=>{let f=s.chars.length-1,p=s.chars[f];for(;p===" ";)s.width-=t.chars[p].xAdvance,p=s.chars[--f];r.width=Math.max(r.width,s.width),s={width:0,charPositions:[],chars:[],spaceWidth:0,spacesIndex:[]},a=!0,r.lines.push(s),r.height+=t.lineHeight},c=t.baseMeasurementFontSize/e.fontSize,h=e.letterSpacing*c,d=e.wordWrapWidth*c;for(let f=0;f<i.length+1;f++){let p;const g=f===i.length;g||(p=i[f]);const m=t.chars[p]||t.chars[" "];if(/(?:\s)/.test(p)||p==="\r"||p===`
`||g){if(!a&&e.wordWrap&&s.width+o.width-h>d?(u(),l(o),g||s.charPositions.push(0)):(o.start=s.width,l(o),g||s.charPositions.push(0)),p==="\r"||p===`
`)s.width!==0&&u();else if(!g){const v=m.xAdvance+(m.kerning[n]||0)+h;s.width+=v,s.spaceWidth=v,s.spacesIndex.push(s.charPositions.length),s.chars.push(p)}}else{const b=m.kerning[n]||0,v=m.xAdvance+b+h;o.positions[o.index++]=o.width+b,o.chars.push(p),o.width+=v}n=p}return u(),e.align==="center"?Jr(r):e.align==="right"?Qr(r):e.align==="justify"&&es(r),r}function Jr(i){for(let e=0;e<i.lines.length;e++){const t=i.lines[e],r=i.width/2-t.width/2;for(let s=0;s<t.charPositions.length;s++)t.charPositions[s]+=r}}function Qr(i){for(let e=0;e<i.lines.length;e++){const t=i.lines[e],r=i.width-t.width;for(let s=0;s<t.charPositions.length;s++)t.charPositions[s]+=r}}function es(i){const e=i.width;for(let t=0;t<i.lines.length;t++){const r=i.lines[t];let s=0,n=r.spacesIndex[s++],a=0;const o=r.spacesIndex.length,u=(e-r.width)/o;for(let c=0;c<r.charPositions.length;c++)c===n&&(n=r.spacesIndex[s++],a+=u),r.charPositions[c]+=a}}class ts{constructor(){this.ALPHA=[["a","z"],["A","Z"]," "],this.NUMERIC=[["0","9"]],this.ALPHANUMERIC=[["a","z"],["A","Z"],["0","9"]," "],this.ASCII=[[" ","~"]],this.defaultOptions={chars:this.ALPHANUMERIC,resolution:1,padding:4,skipKerning:!1}}getFont(e,t){var a;let r=`${t.fontFamily}-bitmap`,s=!0;if(t._fill.fill&&(r+=t._fill.fill.uid,s=!1),!G.has(r)){const o=new et({style:t,overrideFill:s,overrideSize:!0,...this.defaultOptions});o.once("destroy",()=>G.remove(r)),G.set(r,o)}const n=G.get(r);return(a=n.ensureCharacters)==null||a.call(n,e),n}getLayout(e,t){const r=this.getFont(e,t);return Ht([...e],t,r)}measureText(e,t){return this.getLayout(e,t)}install(...e){var u,c,h,d;let t=e[0];typeof t=="string"&&(t={name:t,style:e[1],chars:(u=e[2])==null?void 0:u.chars,resolution:(c=e[2])==null?void 0:c.resolution,padding:(h=e[2])==null?void 0:h.padding,skipKerning:(d=e[2])==null?void 0:d.skipKerning},T(C,"BitmapFontManager.install(name, style, options) is deprecated, use BitmapFontManager.install({name, style, ...options})"));const r=t==null?void 0:t.name;if(!r)throw new Error("[BitmapFontManager] Property `name` is required.");t={...this.defaultOptions,...t};const s=t.style,n=s instanceof Z?s:new Z(s),a=n._fill.fill!==null&&n._fill.fill!==void 0,o=new et({style:n,overrideFill:a,skipKerning:t.skipKerning,padding:t.padding,resolution:t.resolution,overrideSize:!1}),l=Et(t.chars);return o.ensureCharacters(l.join("")),G.set(`${r}-bitmap`,o),o.once("destroy",()=>G.remove(`${r}-bitmap`)),o}uninstall(e){const t=`${e}-bitmap`,r=G.get(t);r&&(G.remove(t),r.destroy())}}const We=new ts;function rs(i){const e=i._stroke,t=i._fill,s=[`div { ${[`color: ${O.shared.setValue(t.color).toHex()}`,`font-size: ${i.fontSize}px`,`font-family: ${i.fontFamily}`,`font-weight: ${i.fontWeight}`,`font-style: ${i.fontStyle}`,`font-variant: ${i.fontVariant}`,`letter-spacing: ${i.letterSpacing}px`,`text-align: ${i.align}`,`padding: ${i.padding}px`,`white-space: ${i.whiteSpace==="pre"&&i.wordWrap?"pre-wrap":i.whiteSpace}`,...i.lineHeight?[`line-height: ${i.lineHeight}px`]:[],...i.wordWrap?[`word-wrap: ${i.breakWords?"break-all":"break-word"}`,`max-width: ${i.wordWrapWidth}px`]:[],...e?[Dt(e)]:[],...i.dropShadow?[Lt(i.dropShadow)]:[],...i.cssOverrides].join(";")} }`];return ss(i.tagStyles,s),s.join(" ")}function Lt(i){const e=O.shared.setValue(i.color).setAlpha(i.alpha).toHexa(),t=Math.round(Math.cos(i.angle)*i.distance),r=Math.round(Math.sin(i.angle)*i.distance),s=`${t}px ${r}px`;return i.blur>0?`text-shadow: ${s} ${i.blur}px ${e}`:`text-shadow: ${s} ${e}`}function Dt(i){return[`-webkit-text-stroke-width: ${i.width}px`,`-webkit-text-stroke-color: ${O.shared.setValue(i.color).toHex()}`,`text-stroke-width: ${i.width}px`,`text-stroke-color: ${O.shared.setValue(i.color).toHex()}`,"paint-order: stroke"].join(";")}const tt={fontSize:"font-size: {{VALUE}}px",fontFamily:"font-family: {{VALUE}}",fontWeight:"font-weight: {{VALUE}}",fontStyle:"font-style: {{VALUE}}",fontVariant:"font-variant: {{VALUE}}",letterSpacing:"letter-spacing: {{VALUE}}px",align:"text-align: {{VALUE}}",padding:"padding: {{VALUE}}px",whiteSpace:"white-space: {{VALUE}}",lineHeight:"line-height: {{VALUE}}px",wordWrapWidth:"max-width: {{VALUE}}px"},rt={fill:i=>`color: ${O.shared.setValue(i).toHex()}`,breakWords:i=>`word-wrap: ${i?"break-all":"break-word"}`,stroke:Dt,dropShadow:Lt};function ss(i,e){for(const t in i){const r=i[t],s=[];for(const n in r)rt[n]?s.push(rt[n](r[n])):tt[n]&&s.push(tt[n].replace("{{VALUE}}",r[n]));e.push(`${t} { ${s.join(";")} }`)}}class Le extends Z{constructor(e={}){super(e),this._cssOverrides=[],this.cssOverrides??(this.cssOverrides=e.cssOverrides),this.tagStyles=e.tagStyles??{}}set cssOverrides(e){this._cssOverrides=e instanceof Array?e:[e],this.update()}get cssOverrides(){return this._cssOverrides}_generateKey(){return this._styleKey=Wt(this)+this._cssOverrides.join("-"),this._styleKey}update(){this._cssStyle=null,super.update()}clone(){return new Le({align:this.align,breakWords:this.breakWords,dropShadow:this.dropShadow,fill:this._fill,fontFamily:this.fontFamily,fontSize:this.fontSize,fontStyle:this.fontStyle,fontVariant:this.fontVariant,fontWeight:this.fontWeight,letterSpacing:this.letterSpacing,lineHeight:this.lineHeight,padding:this.padding,stroke:this._stroke,whiteSpace:this.whiteSpace,wordWrap:this.wordWrap,wordWrapWidth:this.wordWrapWidth,cssOverrides:this.cssOverrides})}get cssStyle(){return this._cssStyle||(this._cssStyle=rs(this)),this._cssStyle}addOverride(...e){const t=e.filter(r=>!this.cssOverrides.includes(r));t.length>0&&(this.cssOverrides.push(...t),this.update())}removeOverride(...e){const t=e.filter(r=>this.cssOverrides.includes(r));t.length>0&&(this.cssOverrides=this.cssOverrides.filter(r=>!t.includes(r)),this.update())}set fill(e){typeof e!="string"&&typeof e!="number"&&X("[HTMLTextStyle] only color fill is not supported by HTMLText"),super.fill=e}set stroke(e){e&&typeof e!="string"&&typeof e!="number"&&X("[HTMLTextStyle] only color stroke is not supported by HTMLText"),super.stroke=e}}const st="http://www.w3.org/2000/svg",it="http://www.w3.org/1999/xhtml";class $t{constructor(){this.svgRoot=document.createElementNS(st,"svg"),this.foreignObject=document.createElementNS(st,"foreignObject"),this.domElement=document.createElementNS(it,"div"),this.styleElement=document.createElementNS(it,"style"),this.image=new Image;const{foreignObject:e,svgRoot:t,styleElement:r,domElement:s}=this;e.setAttribute("width","10000"),e.setAttribute("height","10000"),e.style.overflow="hidden",t.appendChild(e),e.appendChild(r),e.appendChild(s)}}let nt;function is(i,e,t,r){r=r||nt||(nt=new $t);const{domElement:s,styleElement:n,svgRoot:a}=r;s.innerHTML=`<style>${e.cssStyle}</style><div>${i}</div>`,s.setAttribute("style","transform-origin: top left; display: inline-block"),t&&(n.textContent=t),document.body.appendChild(a);const o=s.getBoundingClientRect();a.remove();const l=E.measureFont(e.fontStyle).descent;return{width:o.width,height:o.height+l}}function at(i,e,t){if(i)for(const r in i){const s=r.toLocaleLowerCase(),n=e[s];if(n){let a=i[r];r==="header"&&(a=a.replace(/@in\s+[^;]+;\s*/g,"").replace(/@out\s+[^;]+;\s*/g,"")),t&&n.push(`//----${t}----//`),n.push(a)}else X(`${r} placement hook does not exist in shader`)}}const ns=/\{\{(.*?)\}\}/g;function ot(i){var r;const e={};return(((r=i.match(ns))==null?void 0:r.map(s=>s.replace(/[{()}]/g,"")))??[]).forEach(s=>{e[s]=[]}),e}function lt(i,e){let t;const r=/@in\s+([^;]+);/g;for(;(t=r.exec(i))!==null;)e.push(t[1])}function ct(i,e,t=!1){const r=[];lt(e,r),i.forEach(o=>{o.header&&lt(o.header,r)});const s=r;t&&s.sort();const n=s.map((o,l)=>`       @location(${l}) ${o},`).join(`
`);let a=e.replace(/@in\s+[^;]+;\s*/g,"");return a=a.replace("{{in}}",`
${n}
`),a}function ut(i,e){let t;const r=/@out\s+([^;]+);/g;for(;(t=r.exec(i))!==null;)e.push(t[1])}function as(i){const t=/\b(\w+)\s*:/g.exec(i);return t?t[1]:""}function os(i){const e=/@.*?\s+/g;return i.replace(e,"")}function ls(i,e){const t=[];ut(e,t),i.forEach(l=>{l.header&&ut(l.header,t)});let r=0;const s=t.sort().map(l=>l.indexOf("builtin")>-1?l:`@location(${r++}) ${l}`).join(`,
`),n=t.sort().map(l=>`       var ${os(l)};`).join(`
`),a=`return VSOutput(
                ${t.sort().map(l=>` ${as(l)}`).join(`,
`)});`;let o=e.replace(/@out\s+[^;]+;\s*/g,"");return o=o.replace("{{struct}}",`
${s}
`),o=o.replace("{{start}}",`
${n}
`),o=o.replace("{{return}}",`
${a}
`),o}function ht(i,e){let t=i;for(const r in e){const s=e[r];s.join(`
`).length?t=t.replace(`{{${r}}}`,`//-----${r} START-----//
${s.join(`
`)}
//----${r} FINISH----//`):t=t.replace(`{{${r}}}`,"")}return t}const L=Object.create(null),Me=new Map;let cs=0;function us({template:i,bits:e}){const t=jt(i,e);if(L[t])return L[t];const{vertex:r,fragment:s}=ds(i,e);return L[t]=Vt(r,s,e),L[t]}function hs({template:i,bits:e}){const t=jt(i,e);return L[t]||(L[t]=Vt(i.vertex,i.fragment,e)),L[t]}function ds(i,e){const t=e.map(a=>a.vertex).filter(a=>!!a),r=e.map(a=>a.fragment).filter(a=>!!a);let s=ct(t,i.vertex,!0);s=ls(t,s);const n=ct(r,i.fragment,!0);return{vertex:s,fragment:n}}function jt(i,e){return e.map(t=>(Me.has(t)||Me.set(t,cs++),Me.get(t))).sort((t,r)=>t-r).join("-")+i.vertex+i.fragment}function Vt(i,e,t){const r=ot(i),s=ot(e);return t.forEach(n=>{at(n.vertex,r,n.name),at(n.fragment,s,n.name)}),{vertex:ht(i,r),fragment:ht(e,s)}}const fs=`
    @in aPosition: vec2<f32>;
    @in aUV: vec2<f32>;

    @out @builtin(position) vPosition: vec4<f32>;
    @out vUV : vec2<f32>;
    @out vColor : vec4<f32>;

    {{header}}

    struct VSOutput {
        {{struct}}
    };

    @vertex
    fn main( {{in}} ) -> VSOutput {

        var worldTransformMatrix = globalUniforms.uWorldTransformMatrix;
        var modelMatrix = mat3x3<f32>(
            1.0, 0.0, 0.0,
            0.0, 1.0, 0.0,
            0.0, 0.0, 1.0
          );
        var position = aPosition;
        var uv = aUV;

        {{start}}
        
        vColor = vec4<f32>(1., 1., 1., 1.);

        {{main}}

        vUV = uv;

        var modelViewProjectionMatrix = globalUniforms.uProjectionMatrix * worldTransformMatrix * modelMatrix;

        vPosition =  vec4<f32>((modelViewProjectionMatrix *  vec3<f32>(position, 1.0)).xy, 0.0, 1.0);
       
        vColor *= globalUniforms.uWorldColorAlpha;

        {{end}}

        {{return}}
    };
`,ps=`
    @in vUV : vec2<f32>;
    @in vColor : vec4<f32>;
   
    {{header}}

    @fragment
    fn main(
        {{in}}
      ) -> @location(0) vec4<f32> {
        
        {{start}}

        var outColor:vec4<f32>;
      
        {{main}}
        
        return outColor * vColor;
      };
`,gs=`
    in vec2 aPosition;
    in vec2 aUV;

    out vec4 vColor;
    out vec2 vUV;

    {{header}}

    void main(void){

        mat3 worldTransformMatrix = uWorldTransformMatrix;
        mat3 modelMatrix = mat3(
            1.0, 0.0, 0.0,
            0.0, 1.0, 0.0,
            0.0, 0.0, 1.0
          );
        vec2 position = aPosition;
        vec2 uv = aUV;
        
        {{start}}
        
        vColor = vec4(1.);
        
        {{main}}
        
        vUV = uv;
        
        mat3 modelViewProjectionMatrix = uProjectionMatrix * worldTransformMatrix * modelMatrix;

        gl_Position = vec4((modelViewProjectionMatrix * vec3(position, 1.0)).xy, 0.0, 1.0);

        vColor *= uWorldColorAlpha;

        {{end}}
    }
`,ms=`
   
    in vec4 vColor;
    in vec2 vUV;

    out vec4 finalColor;

    {{header}}

    void main(void) {
        
        {{start}}

        vec4 outColor;
      
        {{main}}
        
        finalColor = outColor * vColor;
    }
`,xs={name:"global-uniforms-bit",vertex:{header:`
        struct GlobalUniforms {
            uProjectionMatrix:mat3x3<f32>,
            uWorldTransformMatrix:mat3x3<f32>,
            uWorldColorAlpha: vec4<f32>,
            uResolution: vec2<f32>,
        }

        @group(0) @binding(0) var<uniform> globalUniforms : GlobalUniforms;
        `}},_s={name:"global-uniforms-bit",vertex:{header:`
          uniform mat3 uProjectionMatrix;
          uniform mat3 uWorldTransformMatrix;
          uniform vec4 uWorldColorAlpha;
          uniform vec2 uResolution;
        `}};function Nt({bits:i,name:e}){const t=us({template:{fragment:ps,vertex:fs},bits:[xs,...i]});return ce.from({name:e,vertex:{source:t.vertex,entryPoint:"main"},fragment:{source:t.fragment,entryPoint:"main"}})}function Kt({bits:i,name:e}){return new wt({name:e,...hs({template:{vertex:gs,fragment:ms},bits:[_s,...i]})})}const bs={name:"color-bit",vertex:{header:`
            @in aColor: vec4<f32>;
        `,main:`
            vColor *= vec4<f32>(aColor.rgb * aColor.a, aColor.a);
        `}},ys={name:"color-bit",vertex:{header:`
            in vec4 aColor;
        `,main:`
            vColor *= vec4(aColor.rgb * aColor.a, aColor.a);
        `}},Fe={};function vs(i){const e=[];if(i===1)e.push("@group(1) @binding(0) var textureSource1: texture_2d<f32>;"),e.push("@group(1) @binding(1) var textureSampler1: sampler;");else{let t=0;for(let r=0;r<i;r++)e.push(`@group(1) @binding(${t++}) var textureSource${r+1}: texture_2d<f32>;`),e.push(`@group(1) @binding(${t++}) var textureSampler${r+1}: sampler;`)}return e.join(`
`)}function Ss(i){const e=[];if(i===1)e.push("outColor = textureSampleGrad(textureSource1, textureSampler1, vUV, uvDx, uvDy);");else{e.push("switch vTextureId {");for(let t=0;t<i;t++)t===i-1?e.push("  default:{"):e.push(`  case ${t}:{`),e.push(`      outColor = textureSampleGrad(textureSource${t+1}, textureSampler${t+1}, vUV, uvDx, uvDy);`),e.push("      break;}");e.push("}")}return e.join(`
`)}function ws(i){return Fe[i]||(Fe[i]={name:"texture-batch-bit",vertex:{header:`
                @in aTextureIdAndRound: vec2<u32>;
                @out @interpolate(flat) vTextureId : u32;
            `,main:`
                vTextureId = aTextureIdAndRound.y;
            `,end:`
                if(aTextureIdAndRound.x == 1)
                {
                    vPosition = vec4<f32>(roundPixels(vPosition.xy, globalUniforms.uResolution), vPosition.zw);
                }
            `},fragment:{header:`
                @in @interpolate(flat) vTextureId: u32;
    
                ${vs(ne())}
            `,main:`
                var uvDx = dpdx(vUV);
                var uvDy = dpdy(vUV);
    
                ${Ss(ne())}
            `}}),Fe[i]}const Be={};function Ts(i){const e=[];for(let t=0;t<i;t++)t>0&&e.push("else"),t<i-1&&e.push(`if(vTextureId < ${t}.5)`),e.push("{"),e.push(`	outColor = texture(uTextures[${t}], vUV);`),e.push("}");return e.join(`
`)}function Cs(i){return Be[i]||(Be[i]={name:"texture-batch-bit",vertex:{header:`
                in vec2 aTextureIdAndRound;
                out float vTextureId;
              
            `,main:`
                vTextureId = aTextureIdAndRound.y;
            `,end:`
                if(aTextureIdAndRound.x == 1.)
                {
                    gl_Position.xy = roundPixels(gl_Position.xy, uResolution);
                }
            `},fragment:{header:`
                in float vTextureId;
    
                uniform sampler2D uTextures[${i}];
              
            `,main:`
    
                ${Ts(ne())}
            `}}),Be[i]}const Yt={name:"round-pixels-bit",vertex:{header:`
            fn roundPixels(position: vec2<f32>, targetSize: vec2<f32>) -> vec2<f32> 
            {
                return (floor(((position * 0.5 + 0.5) * targetSize) + 0.5) / targetSize) * 2.0 - 1.0;
            }
        `}},Xt={name:"round-pixels-bit",vertex:{header:`   
            vec2 roundPixels(vec2 position, vec2 targetSize)
            {       
                return (floor(((position * 0.5 + 0.5) * targetSize) + 0.5) / targetSize) * 2.0 - 1.0;
            }
        `}},dt={};function Ps(i){let e=dt[i];if(e)return e;const t=new Int32Array(i);for(let r=0;r<i;r++)t[r]=r;return e=dt[i]=new j({uTextures:{value:t,type:"i32",size:i}},{isStatic:!0}),e}const se={name:"local-uniform-bit",vertex:{header:`

            struct LocalUniforms {
                uTransformMatrix:mat3x3<f32>,
                uColor:vec4<f32>,
                uRound:f32,
            }

            @group(1) @binding(0) var<uniform> localUniforms : LocalUniforms;
        `,main:`
            vColor *= localUniforms.uColor;
            modelMatrix *= localUniforms.uTransformMatrix;
        `,end:`
            if(localUniforms.uRound == 1)
            {
                vPosition = vec4(roundPixels(vPosition.xy, globalUniforms.uResolution), vPosition.zw);
            }
        `}};({...se,vertex:{...se.vertex,header:se.vertex.header.replace("group(1)","group(2)")}});const Ms={name:"local-uniform-bit",vertex:{header:`

            uniform mat3 uTransformMatrix;
            uniform vec4 uColor;
            uniform float uRound;
        `,main:`
            vColor *= uColor;
            modelMatrix = uTransformMatrix;
        `,end:`
            if(uRound == 1.)
            {
                gl_Position.xy = roundPixels(gl_Position.xy, uResolution);
            }
        `}};class qt{constructor(){this.vertexSize=4,this.indexSize=6,this.location=0,this.batcher=null,this.batch=null,this.roundPixels=0}get blendMode(){return this.renderable.groupBlendMode}packAttributes(e,t,r,s){const n=this.renderable,a=this.texture,o=n.groupTransform,l=o.a,u=o.b,c=o.c,h=o.d,d=o.tx,f=o.ty,p=this.bounds,g=p.maxX,m=p.minX,_=p.maxY,y=p.minY,b=a.uvs,v=n.groupColorAlpha,w=s<<16|this.roundPixels&65535;e[r+0]=l*m+c*y+d,e[r+1]=h*y+u*m+f,e[r+2]=b.x0,e[r+3]=b.y0,t[r+4]=v,t[r+5]=w,e[r+6]=l*g+c*y+d,e[r+7]=h*y+u*g+f,e[r+8]=b.x1,e[r+9]=b.y1,t[r+10]=v,t[r+11]=w,e[r+12]=l*g+c*_+d,e[r+13]=h*_+u*g+f,e[r+14]=b.x2,e[r+15]=b.y2,t[r+16]=v,t[r+17]=w,e[r+18]=l*m+c*_+d,e[r+19]=h*_+u*m+f,e[r+20]=b.x3,e[r+21]=b.y3,t[r+22]=v,t[r+23]=w}packIndex(e,t,r){e[t]=r+0,e[t+1]=r+1,e[t+2]=r+2,e[t+3]=r+0,e[t+4]=r+2,e[t+5]=r+3}reset(){this.renderable=null,this.texture=null,this.batcher=null,this.batch=null,this.bounds=null}}function De(i,e,t){const r=(i>>24&255)/255;e[t++]=(i&255)/255*r,e[t++]=(i>>8&255)/255*r,e[t++]=(i>>16&255)/255*r,e[t++]=r}class Zt{constructor(e,t){this.state=Ft.for2d(),this._graphicsBatchesHash=Object.create(null),this.renderer=e,this._adaptor=t,this._adaptor.init()}validateRenderable(e){const t=e.context,r=!!this._graphicsBatchesHash[e.uid],s=this.renderer.graphicsContext.updateGpuContext(t);return!!(s.isBatchable||r!==s.isBatchable)}addRenderable(e,t){const r=this.renderer.graphicsContext.updateGpuContext(e.context);e._didGraphicsUpdate&&(e._didGraphicsUpdate=!1,this._rebuild(e)),r.isBatchable?this._addToBatcher(e,t):(this.renderer.renderPipes.batch.break(t),t.add(e))}updateRenderable(e){const t=this._graphicsBatchesHash[e.uid];if(t)for(let r=0;r<t.length;r++){const s=t[r];s.batcher.updateElement(s)}}destroyRenderable(e){this._graphicsBatchesHash[e.uid]&&this._removeBatchForRenderable(e.uid)}execute(e){if(!e.isRenderable)return;const t=this.renderer,r=e.context;if(!t.graphicsContext.getGpuContext(r).batches.length)return;const n=r.customShader||this._adaptor.shader;this.state.blendMode=e.groupBlendMode;const a=n.resources.localUniforms.uniforms;a.uTransformMatrix=e.groupTransform,a.uRound=t._roundPixels|e._roundPixels,De(e.groupColorAlpha,a.uColor,0),this._adaptor.execute(this,e)}_rebuild(e){const t=!!this._graphicsBatchesHash[e.uid],r=this.renderer.graphicsContext.updateGpuContext(e.context);t&&this._removeBatchForRenderable(e.uid),r.isBatchable&&this._initBatchesForRenderable(e),e.batched=r.isBatchable}_addToBatcher(e,t){const r=this.renderer.renderPipes.batch,s=this._getBatchesForRenderable(e);for(let n=0;n<s.length;n++){const a=s[n];r.addToBatch(a,t)}}_getBatchesForRenderable(e){return this._graphicsBatchesHash[e.uid]||this._initBatchesForRenderable(e)}_initBatchesForRenderable(e){const t=e.context,r=this.renderer.graphicsContext.getGpuContext(t),s=this.renderer._roundPixels|e._roundPixels,n=r.batches.map(a=>{const o=k.get(vr);return a.copyTo(o),o.renderable=e,o.roundPixels=s,o});return this._graphicsBatchesHash[e.uid]===void 0&&e.on("destroyed",()=>{this.destroyRenderable(e)}),this._graphicsBatchesHash[e.uid]=n,n}_removeBatchForRenderable(e){this._graphicsBatchesHash[e].forEach(t=>{k.return(t)}),this._graphicsBatchesHash[e]=null}destroy(){this.renderer=null,this._adaptor.destroy(),this._adaptor=null,this.state=null;for(const e in this._graphicsBatchesHash)this._removeBatchForRenderable(e);this._graphicsBatchesHash=null}}Zt.extension={type:[S.WebGLPipes,S.WebGPUPipes,S.CanvasPipes],name:"graphics"};const Jt=class Qt extends Ee{constructor(...e){super({});let t=e[0]??{};typeof t=="number"&&(T(C,"PlaneGeometry constructor changed please use { width, height, verticesX, verticesY } instead"),t={width:t,height:e[1],verticesX:e[2],verticesY:e[3]}),this.build(t)}build(e){e={...Qt.defaultOptions,...e},this.verticesX=this.verticesX??e.verticesX,this.verticesY=this.verticesY??e.verticesY,this.width=this.width??e.width,this.height=this.height??e.height;const t=this.verticesX*this.verticesY,r=[],s=[],n=[],a=this.verticesX-1,o=this.verticesY-1,l=this.width/a,u=this.height/o;for(let h=0;h<t;h++){const d=h%this.verticesX,f=h/this.verticesX|0;r.push(d*l,f*u),s.push(d/a,f/o)}const c=a*o;for(let h=0;h<c;h++){const d=h%a,f=h/a|0,p=f*this.verticesX+d,g=f*this.verticesX+d+1,m=(f+1)*this.verticesX+d,_=(f+1)*this.verticesX+d+1;n.push(p,g,m,g,_,m)}this.buffers[0].data=new Float32Array(r),this.buffers[1].data=new Float32Array(s),this.indexBuffer.data=new Uint32Array(n),this.buffers[0].update(),this.buffers[1].update(),this.indexBuffer.update()}};Jt.defaultOptions={width:100,height:100,verticesX:10,verticesY:10};let Fs=Jt;class $e{constructor(){this.batcher=null,this.batch=null,this.roundPixels=0,this._uvUpdateId=-1,this._textureMatrixUpdateId=-1}get blendMode(){return this.mesh.groupBlendMode}reset(){this.mesh=null,this.texture=null,this.batcher=null,this.batch=null}packIndex(e,t,r){const s=this.geometry.indices;for(let n=0;n<s.length;n++)e[t++]=s[n]+r}packAttributes(e,t,r,s){const n=this.mesh,a=this.geometry,o=n.groupTransform,l=s<<16|this.roundPixels&65535,u=o.a,c=o.b,h=o.c,d=o.d,f=o.tx,p=o.ty,g=a.positions,m=a.getBuffer("aUV"),_=m.data;let y=_;const b=this.texture.textureMatrix;b.isSimple||(y=this._transformedUvs,(this._textureMatrixUpdateId!==b._updateID||this._uvUpdateId!==m._updateID)&&((!y||y.length<_.length)&&(y=this._transformedUvs=new Float32Array(_.length)),this._textureMatrixUpdateId=b._updateID,this._uvUpdateId=m._updateID,b.multiplyUvs(_,y)));const v=n.groupColorAlpha;for(let w=0;w<g.length;w+=2){const F=g[w],P=g[w+1];e[r]=u*F+h*P+f,e[r+1]=c*F+d*P+p,e[r+2]=y[w],e[r+3]=y[w+1],t[r+4]=v,t[r+5]=l,r+=6}}get vertexSize(){return this.geometry.positions.length/2}get indexSize(){return this.geometry.indices.length}}class er{constructor(e,t){this.localUniforms=new j({uTransformMatrix:{value:new I,type:"mat3x3<f32>"},uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uRound:{value:0,type:"f32"}}),this.localUniformsBindGroup=new Q({0:this.localUniforms}),this._meshDataHash=Object.create(null),this._gpuBatchableMeshHash=Object.create(null),this.renderer=e,this._adaptor=t,this._adaptor.init()}validateRenderable(e){const t=this._getMeshData(e),r=t.batched,s=e.batched;if(t.batched=s,r!==s)return!0;if(s){const n=e._geometry;if(n.indices.length!==t.indexSize||n.positions.length!==t.vertexSize)return t.indexSize=n.indices.length,t.vertexSize=n.positions.length,!0;const a=this._getBatchableMesh(e),o=e.texture;if(a.texture._source!==o._source&&a.texture._source!==o._source)return!a.batcher.checkAndUpdateTexture(a,o)}return!1}addRenderable(e,t){const r=this.renderer.renderPipes.batch,{batched:s}=this._getMeshData(e);if(s){const n=this._getBatchableMesh(e);n.texture=e._texture,n.geometry=e._geometry,r.addToBatch(n)}else r.break(t),t.add({renderPipeId:"mesh",mesh:e})}updateRenderable(e){if(e.batched){const t=this._gpuBatchableMeshHash[e.uid];t.texture=e._texture,t.geometry=e._geometry,t.batcher.updateElement(t)}}destroyRenderable(e){this._meshDataHash[e.uid]=null;const t=this._gpuBatchableMeshHash[e.uid];t&&(k.return(t),this._gpuBatchableMeshHash[e.uid]=null)}execute({mesh:e}){if(!e.isRenderable)return;e.state.blendMode=e.groupBlendMode;const t=this.localUniforms;t.uniforms.uTransformMatrix=e.groupTransform,t.uniforms.uRound=this.renderer._roundPixels|e._roundPixels,t.update(),De(e.groupColorAlpha,t.uniforms.uColor,0),this._adaptor.execute(this,e)}_getMeshData(e){return this._meshDataHash[e.uid]||this._initMeshData(e)}_initMeshData(e){var t,r;return this._meshDataHash[e.uid]={batched:e.batched,indexSize:(t=e._geometry.indices)==null?void 0:t.length,vertexSize:(r=e._geometry.positions)==null?void 0:r.length},e.on("destroyed",()=>{this.destroyRenderable(e)}),this._meshDataHash[e.uid]}_getBatchableMesh(e){return this._gpuBatchableMeshHash[e.uid]||this._initBatchableMesh(e)}_initBatchableMesh(e){const t=k.get($e);return t.mesh=e,t.texture=e._texture,t.roundPixels=this.renderer._roundPixels|e._roundPixels,this._gpuBatchableMeshHash[e.uid]=t,t.mesh=e,t}destroy(){for(const e in this._gpuBatchableMeshHash)this._gpuBatchableMeshHash[e]&&k.return(this._gpuBatchableMeshHash[e]);this._gpuBatchableMeshHash=null,this._meshDataHash=null,this.localUniforms=null,this.localUniformsBindGroup=null,this._adaptor.destroy(),this._adaptor=null,this.renderer=null}}er.extension={type:[S.WebGLPipes,S.WebGPUPipes,S.CanvasPipes],name:"mesh"};const tr=class rr extends Fs{constructor(e={}){e={...rr.defaultOptions,...e},super({width:e.width,height:e.height,verticesX:4,verticesY:4}),this.update(e)}update(e){this.width=e.width??this.width,this.height=e.height??this.height,this._originalWidth=e.originalWidth??this._originalWidth,this._originalHeight=e.originalHeight??this._originalHeight,this._leftWidth=e.leftWidth??this._leftWidth,this._rightWidth=e.rightWidth??this._rightWidth,this._topHeight=e.topHeight??this._topHeight,this._bottomHeight=e.bottomHeight??this._bottomHeight,this.updateUvs(),this.updatePositions()}updatePositions(){const e=this.positions,t=this._leftWidth+this._rightWidth,r=this.width>t?1:this.width/t,s=this._topHeight+this._bottomHeight,n=this.height>s?1:this.height/s,a=Math.min(r,n);e[9]=e[11]=e[13]=e[15]=this._topHeight*a,e[17]=e[19]=e[21]=e[23]=this.height-this._bottomHeight*a,e[25]=e[27]=e[29]=e[31]=this.height,e[2]=e[10]=e[18]=e[26]=this._leftWidth*a,e[4]=e[12]=e[20]=e[28]=this.width-this._rightWidth*a,e[6]=e[14]=e[22]=e[30]=this.width,this.getBuffer("aPosition").update()}updateUvs(){const e=this.uvs;e[0]=e[8]=e[16]=e[24]=0,e[1]=e[3]=e[5]=e[7]=0,e[6]=e[14]=e[22]=e[30]=1,e[25]=e[27]=e[29]=e[31]=1;const t=1/this._originalWidth,r=1/this._originalHeight;e[2]=e[10]=e[18]=e[26]=t*this._leftWidth,e[9]=e[11]=e[13]=e[15]=r*this._topHeight,e[4]=e[12]=e[20]=e[28]=1-t*this._rightWidth,e[17]=e[19]=e[21]=e[23]=1-r*this._bottomHeight,this.getBuffer("aUV").update()}};tr.defaultOptions={width:100,height:100,leftWidth:10,topHeight:10,rightWidth:10,bottomHeight:10,originalWidth:100,originalHeight:100};let Bs=tr;class sr{constructor(e){this._gpuSpriteHash=Object.create(null),this._renderer=e}addRenderable(e,t){const r=this._getGpuSprite(e);e._didSpriteUpdate&&this._updateBatchableSprite(e,r),this._renderer.renderPipes.batch.addToBatch(r)}updateRenderable(e){const t=this._gpuSpriteHash[e.uid];e._didSpriteUpdate&&this._updateBatchableSprite(e,t),t.batcher.updateElement(t)}validateRenderable(e){const t=e._texture,r=this._getGpuSprite(e);return r.texture._source!==t._source?!r.batcher.checkAndUpdateTexture(r,t):!1}destroyRenderable(e){const t=this._gpuSpriteHash[e.uid];k.return(t),this._gpuSpriteHash[e.uid]=null}_updateBatchableSprite(e,t){e._didSpriteUpdate=!1,t.geometry.update(e),t.texture=e._texture}_getGpuSprite(e){return this._gpuSpriteHash[e.uid]||this._initGPUSprite(e)}_initGPUSprite(e){const t=new $e;return t.geometry=new Bs,t.mesh=e,t.texture=e._texture,t.roundPixels=this._renderer._roundPixels|e._roundPixels,this._gpuSpriteHash[e.uid]=t,e.on("destroyed",()=>{this.destroyRenderable(e)}),t}destroy(){for(const e in this._gpuSpriteHash)this._gpuSpriteHash[e].geometry.destroy();this._gpuSpriteHash=null,this._renderer=null}}sr.extension={type:[S.WebGLPipes,S.WebGPUPipes,S.CanvasPipes],name:"nineSliceSprite"};const ks={name:"tiling-bit",vertex:{header:`
            struct TilingUniforms {
                uMapCoord:mat3x3<f32>,
                uClampFrame:vec4<f32>,
                uClampOffset:vec2<f32>,
                uTextureTransform:mat3x3<f32>,
                uSizeAnchor:vec4<f32>
            };

            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;
            @group(2) @binding(1) var uTexture: texture_2d<f32>;
            @group(2) @binding(2) var uSampler: sampler;
        `,main:`
            uv = (tilingUniforms.uTextureTransform * vec3(uv, 1.0)).xy;

            position = (position - tilingUniforms.uSizeAnchor.zw) * tilingUniforms.uSizeAnchor.xy;
        `},fragment:{header:`
            struct TilingUniforms {
                uMapCoord:mat3x3<f32>,
                uClampFrame:vec4<f32>,
                uClampOffset:vec2<f32>,
                uTextureTransform:mat3x3<f32>,
                uSizeAnchor:vec4<f32>
            };

            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;
            @group(2) @binding(1) var uTexture: texture_2d<f32>;
            @group(2) @binding(2) var uSampler: sampler;
        `,main:`

            var coord = vUV + ceil(tilingUniforms.uClampOffset - vUV);
            coord = (tilingUniforms.uMapCoord * vec3(coord, 1.0)).xy;
            var unclamped = coord;
            coord = clamp(coord, tilingUniforms.uClampFrame.xy, tilingUniforms.uClampFrame.zw);

            var bias = 0.;

            if(unclamped.x == coord.x && unclamped.y == coord.y)
            {
                bias = -32.;
            } 

            outColor = textureSampleBias(uTexture, uSampler, coord, bias);
        `}},As={name:"tiling-bit",vertex:{header:`
            uniform mat3 uTextureTransform;
            uniform vec4 uSizeAnchor;
        
        `,main:`
            uv = (uTextureTransform * vec3(aUV, 1.0)).xy;

            position = (position - uSizeAnchor.zw) * uSizeAnchor.xy;
        `},fragment:{header:`
            uniform sampler2D uTexture;
            uniform mat3 uMapCoord;
            uniform vec4 uClampFrame;
            uniform vec2 uClampOffset;
        `,main:`

        vec2 coord = vUV + ceil(uClampOffset - vUV);
        coord = (uMapCoord * vec3(coord, 1.0)).xy;
        vec2 unclamped = coord;
        coord = clamp(coord, uClampFrame.xy, uClampFrame.zw);
        
        outColor = texture(uTexture, coord, unclamped == coord ? 0.0 : -32.0);// lod-bias very negative to force lod 0
    
        `}};let ke,Ae;class Rs extends ue{constructor(){ke??(ke=Nt({name:"tiling-sprite-shader",bits:[se,ks,Yt]})),Ae??(Ae=Kt({name:"tiling-sprite-shader",bits:[Ms,As,Xt]}));const e=new j({uMapCoord:{value:new I,type:"mat3x3<f32>"},uClampFrame:{value:new Float32Array([0,0,1,1]),type:"vec4<f32>"},uClampOffset:{value:new Float32Array([0,0]),type:"vec2<f32>"},uTextureTransform:{value:new I,type:"mat3x3<f32>"},uSizeAnchor:{value:new Float32Array([100,100,.5,.5]),type:"vec4<f32>"}});super({glProgram:Ae,gpuProgram:ke,resources:{localUniforms:new j({uTransformMatrix:{value:new I,type:"mat3x3<f32>"},uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uRound:{value:0,type:"f32"}}),tilingUniforms:e,uTexture:U.EMPTY.source,uSampler:U.EMPTY.source.style}})}updateUniforms(e,t,r,s,n,a){const o=this.resources.tilingUniforms,l=a.width,u=a.height,c=a.textureMatrix,h=o.uniforms.uTextureTransform;h.set(r.a*l/e,r.b*l/t,r.c*u/e,r.d*u/t,r.tx/e,r.ty/t),h.invert(),o.uniforms.uMapCoord=c.mapCoord,o.uniforms.uClampFrame=c.uClampFrame,o.uniforms.uClampOffset=c.uClampOffset,o.uniforms.uTextureTransform=h,o.uniforms.uSizeAnchor[0]=e,o.uniforms.uSizeAnchor[1]=t,o.uniforms.uSizeAnchor[2]=s,o.uniforms.uSizeAnchor[3]=n,a&&(this.resources.uTexture=a.source,this.resources.uSampler=a.source.style)}}class Us extends Ee{constructor(){super({positions:new Float32Array([0,0,1,0,1,1,0,1]),uvs:new Float32Array([0,0,1,0,1,1,0,1]),indices:new Uint32Array([0,1,2,0,2,3])})}}function Gs(i,e){const t=i.anchor.x,r=i.anchor.y;e[0]=-t*i.width,e[1]=-r*i.height,e[2]=(1-t)*i.width,e[3]=-r*i.height,e[4]=(1-t)*i.width,e[5]=(1-r)*i.height,e[6]=-t*i.width,e[7]=(1-r)*i.height}function zs(i,e,t,r){let s=0;const n=i.length/e,a=r.a,o=r.b,l=r.c,u=r.d,c=r.tx,h=r.ty;for(t*=e;s<n;){const d=i[t],f=i[t+1];i[t]=a*d+l*f+c,i[t+1]=o*d+u*f+h,t+=e,s++}}function Ws(i,e){const t=i.texture,r=t.frame.width,s=t.frame.height;let n=0,a=0;i._applyAnchorToTexture&&(n=i.anchor.x,a=i.anchor.y),e[0]=e[6]=-n,e[2]=e[4]=1-n,e[1]=e[3]=-a,e[5]=e[7]=1-a;const o=I.shared;o.copyFrom(i._tileTransform.matrix),o.tx/=i.width,o.ty/=i.height,o.invert(),o.scale(i.width/r,i.height/s),zs(e,2,0,o)}const te=new Us;class ir{constructor(e){this._tilingSpriteDataHash=Object.create(null),this._renderer=e}validateRenderable(e){const t=this._getTilingSpriteData(e),r=t.canBatch;this._updateCanBatch(e);const s=t.canBatch;if(s&&s===r){const{batchableMesh:n}=t;if(n.texture._source!==e.texture._source)return!n.batcher.checkAndUpdateTexture(n,e.texture)}return r!==s}addRenderable(e,t){const r=this._renderer.renderPipes.batch;this._updateCanBatch(e);const s=this._getTilingSpriteData(e),{geometry:n,canBatch:a}=s;if(a){s.batchableMesh||(s.batchableMesh=new $e);const o=s.batchableMesh;e._didTilingSpriteUpdate&&(e._didTilingSpriteUpdate=!1,this._updateBatchableMesh(e),o.geometry=n,o.mesh=e,o.texture=e._texture),o.roundPixels=this._renderer._roundPixels|e._roundPixels,r.addToBatch(o)}else r.break(t),s.shader||(s.shader=new Rs),this.updateRenderable(e),t.add(e)}execute(e){const{shader:t}=this._tilingSpriteDataHash[e.uid];t.groups[0]=this._renderer.globalUniforms.bindGroup;const r=t.resources.localUniforms.uniforms;r.uTransformMatrix=e.groupTransform,r.uRound=this._renderer._roundPixels|e._roundPixels,De(e.groupColorAlpha,r.uColor,0),this._renderer.encoder.draw({geometry:te,shader:t,state:Ft.default2d})}updateRenderable(e){const t=this._getTilingSpriteData(e),{canBatch:r}=t;if(r){const{batchableMesh:s}=t;e._didTilingSpriteUpdate&&this._updateBatchableMesh(e),s.batcher.updateElement(s)}else if(e._didTilingSpriteUpdate){const{shader:s}=t;s.updateUniforms(e.width,e.height,e._tileTransform.matrix,e.anchor.x,e.anchor.y,e.texture)}e._didTilingSpriteUpdate=!1}destroyRenderable(e){var r;const t=this._getTilingSpriteData(e);t.batchableMesh=null,(r=t.shader)==null||r.destroy(),this._tilingSpriteDataHash[e.uid]=null}_getTilingSpriteData(e){return this._tilingSpriteDataHash[e.uid]||this._initTilingSpriteData(e)}_initTilingSpriteData(e){const t=new Ee({indices:te.indices,positions:te.positions.slice(),uvs:te.uvs.slice()});return this._tilingSpriteDataHash[e.uid]={canBatch:!0,renderable:e,geometry:t},e.on("destroyed",()=>{this.destroyRenderable(e)}),this._tilingSpriteDataHash[e.uid]}_updateBatchableMesh(e){const t=this._getTilingSpriteData(e),{geometry:r}=t,s=e.texture.source.style;s.addressMode!=="repeat"&&(s.addressMode="repeat",s.update()),Ws(e,r.uvs),Gs(e,r.positions)}destroy(){for(const e in this._tilingSpriteDataHash)this.destroyRenderable(this._tilingSpriteDataHash[e].renderable);this._tilingSpriteDataHash=null,this._renderer=null}_updateCanBatch(e){const t=this._getTilingSpriteData(e),r=e.texture;let s=!0;return this._renderer.type===q.WEBGL&&(s=this._renderer.context.supports.nonPowOf2wrapping),t.canBatch=r.textureMatrix.isSimple&&(s||r.source.isPowerOfTwo),t.canBatch}}ir.extension={type:[S.WebGLPipes,S.WebGPUPipes,S.CanvasPipes],name:"tilingSprite"};const Re={test(i){return typeof i=="string"&&i.startsWith("info face=")},parse(i){const e=i.match(/^[a-z]+\s+.+$/gm),t={info:[],common:[],page:[],char:[],chars:[],kerning:[],kernings:[],distanceField:[]};for(const h in e){const d=e[h].match(/^[a-z]+/gm)[0],f=e[h].match(/[a-zA-Z]+=([^\s"']+|"([^"]*)")/gm),p={};for(const g in f){const m=f[g].split("="),_=m[0],y=m[1].replace(/"/gm,""),b=parseFloat(y),v=isNaN(b)?y:b;p[_]=v}t[d].push(p)}const r={chars:{},pages:[],lineHeight:0,fontSize:0,fontFamily:"",distanceField:null,baseLineOffset:0},[s]=t.info,[n]=t.common,[a]=t.distanceField??[];a&&(r.distanceField={range:parseInt(a.distanceRange,10),type:a.fieldType}),r.fontSize=parseInt(s.size,10),r.fontFamily=s.face,r.lineHeight=parseInt(n.lineHeight,10);const o=t.page;for(let h=0;h<o.length;h++)r.pages.push({id:parseInt(o[h].id,10)||0,file:o[h].file});const l={};r.baseLineOffset=r.lineHeight-parseInt(n.base,10);const u=t.char;for(let h=0;h<u.length;h++){const d=u[h],f=parseInt(d.id,10);let p=d.letter??d.char??String.fromCharCode(f);p==="space"&&(p=" "),l[f]=p,r.chars[p]={id:f,page:parseInt(d.page,10)||0,x:parseInt(d.x,10),y:parseInt(d.y,10),width:parseInt(d.width,10),height:parseInt(d.height,10),xOffset:parseInt(d.xoffset,10),yOffset:parseInt(d.yoffset,10),xAdvance:parseInt(d.xadvance,10),kerning:{}}}const c=t.kerning||[];for(let h=0;h<c.length;h++){const d=parseInt(c[h].first,10),f=parseInt(c[h].second,10),p=parseInt(c[h].amount,10);r.chars[l[f]].kerning[l[d]]=p}return r}},ft={test(i){const e=i;return typeof e!="string"&&"getElementsByTagName"in e&&e.getElementsByTagName("page").length&&e.getElementsByTagName("info")[0].getAttribute("face")!==null},parse(i){const e={chars:{},pages:[],lineHeight:0,fontSize:0,fontFamily:"",distanceField:null,baseLineOffset:0},t=i.getElementsByTagName("info")[0],r=i.getElementsByTagName("common")[0],s=i.getElementsByTagName("distanceField")[0];s&&(e.distanceField={type:s.getAttribute("fieldType"),range:parseInt(s.getAttribute("distanceRange"),10)});const n=i.getElementsByTagName("page"),a=i.getElementsByTagName("char"),o=i.getElementsByTagName("kerning");e.fontSize=parseInt(t.getAttribute("size"),10),e.fontFamily=t.getAttribute("face"),e.lineHeight=parseInt(r.getAttribute("lineHeight"),10);for(let u=0;u<n.length;u++)e.pages.push({id:parseInt(n[u].getAttribute("id"),10)||0,file:n[u].getAttribute("file")});const l={};e.baseLineOffset=e.lineHeight-parseInt(r.getAttribute("base"),10);for(let u=0;u<a.length;u++){const c=a[u],h=parseInt(c.getAttribute("id"),10);let d=c.getAttribute("letter")??c.getAttribute("char")??String.fromCharCode(h);d==="space"&&(d=" "),l[h]=d,e.chars[d]={id:h,page:parseInt(c.getAttribute("page"),10)||0,x:parseInt(c.getAttribute("x"),10),y:parseInt(c.getAttribute("y"),10),width:parseInt(c.getAttribute("width"),10),height:parseInt(c.getAttribute("height"),10),xOffset:parseInt(c.getAttribute("xoffset"),10),yOffset:parseInt(c.getAttribute("yoffset"),10),xAdvance:parseInt(c.getAttribute("xadvance"),10),kerning:{}}}for(let u=0;u<o.length;u++){const c=parseInt(o[u].getAttribute("first"),10),h=parseInt(o[u].getAttribute("second"),10),d=parseInt(o[u].getAttribute("amount"),10);e.chars[l[h]].kerning[l[c]]=d}return e}},pt={test(i){return typeof i=="string"&&i.includes("<font>")?ft.test(H.get().parseXML(i)):!1},parse(i){return ft.parse(H.get().parseXML(i))}};class nr extends Ot{constructor(e,t){super();const{textures:r,data:s}=e;Object.keys(s.pages).forEach(n=>{const a=s.pages[parseInt(n,10)],o=r[a.id];this.pages.push({texture:o})}),Object.keys(s.chars).forEach(n=>{const a=s.chars[n],{frame:o,source:l}=r[a.page],u=new ie(a.x+o.x,a.y+o.y,a.width,a.height),c=new U({source:l,frame:u});this.chars[n]={id:n.codePointAt(0),xOffset:a.xOffset,yOffset:a.yOffset,xAdvance:a.xAdvance,kerning:a.kerning??{},texture:c}}),this.baseRenderedFontSize=s.fontSize,this.baseMeasurementFontSize=s.fontSize,this.fontMetrics={ascent:0,descent:0,fontSize:s.fontSize},this.baseLineOffset=s.baseLineOffset,this.lineHeight=s.lineHeight,this.fontFamily=s.fontFamily,this.distanceField=s.distanceField??{type:"none",range:0},this.url=t}destroy(){super.destroy();for(let e=0;e<this.pages.length;e++){const{texture:t}=this.pages[e];t.destroy(!0)}this.pages=null}static install(e){We.install(e)}static uninstall(e){We.uninstall(e)}}const Is=[".xml",".fnt"],Os={extension:S.CacheParser,test:i=>i instanceof nr,getCacheableAssets(i,e){const t={};return i.forEach(r=>{t[r]=e}),t[`${e.fontFamily}-bitmap`]=e,t}},Es={extension:{type:S.LoadParser,priority:Sr.Normal},test(i){return Is.includes(pe.extname(i).toLowerCase())},async testParse(i){return Re.test(i)||pt.test(i)},async parse(i,e,t){const r=Re.test(i)?Re.parse(i):pt.parse(i),{src:s}=e,{pages:n}=r,a=[];for(let c=0;c<n.length;++c){const h=n[c].file;let d=pe.join(pe.dirname(s),h);d=wr(d,s),a.push(d)}const o=await t.load(a),l=a.map(c=>o[c]);return new nr({data:r,textures:l},s)},async load(i,e){return await(await H.get().fetch(i)).text()},async unload(i,e,t){await Promise.all(i.pages.map(r=>t.unload(r.texture.source._sourceOrigin))),i.destroy()}},Hs={name:"local-uniform-msdf-bit",vertex:{header:`
            struct LocalUniforms {
                uColor:vec4<f32>,
                uTransformMatrix:mat3x3<f32>,
                uDistance: f32,
                uRound:f32,
            }

            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;
        `,main:`
            vColor *= localUniforms.uColor;
            modelMatrix *= localUniforms.uTransformMatrix;
        `,end:`
            if(localUniforms.uRound == 1)
            {
                vPosition = vec4(roundPixels(vPosition.xy, globalUniforms.uResolution), vPosition.zw);
            }
        `},fragment:{header:`
            struct LocalUniforms {
                uColor:vec4<f32>,
                uTransformMatrix:mat3x3<f32>,
                uDistance: f32
            }

            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;
         `,main:` 
            outColor = vColor * calculateMSDFAlpha(outColor, localUniforms.uDistance);
        `}},Ls={name:"local-uniform-msdf-bit",vertex:{header:`
            uniform mat3 uTransformMatrix;
            uniform vec4 uColor;
            uniform float uRound;
        `,main:`
            vColor *= uColor;
            modelMatrix *= uTransformMatrix;
        `,end:`
            if(uRound == 1.)
            {
                gl_Position.xy = roundPixels(gl_Position.xy, uResolution);
            }
        `},fragment:{header:`
            uniform float uDistance;
         `,main:` 
            outColor = vColor * calculateMSDFAlpha(outColor, uDistance);
        `}},Ds={name:"msdf-bit",fragment:{header:`
            fn calculateMSDFAlpha(msdfColor:vec4<f32>, distance:f32) -> f32 {
                
                // MSDF
                var median = msdfColor.r + msdfColor.g + msdfColor.b -
                    min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -
                    max(msdfColor.r, max(msdfColor.g, msdfColor.b));
            
                // SDF
                median = min(median, msdfColor.a);

                var screenPxDistance = distance * (median - 0.5);
                var alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);
                if (median < 0.01) {
                    alpha = 0.0;
                } else if (median > 0.99) {
                    alpha = 1.0;
                }

                return alpha;
            }
        `}},$s={name:"msdf-bit",fragment:{header:`
            float calculateMSDFAlpha(vec4 msdfColor, float distance) {
                
                // MSDF
                float median = msdfColor.r + msdfColor.g + msdfColor.b -
                                min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -
                                max(msdfColor.r, max(msdfColor.g, msdfColor.b));
               
                // SDF
                median = min(median, msdfColor.a);
            
                float screenPxDistance = distance * (median - 0.5);
                float alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);
           
                if (median < 0.01) {
                    alpha = 0.0;
                } else if (median > 0.99) {
                    alpha = 1.0;
                }

                return alpha;
            }
        `}};class js extends ue{constructor(){const e=new j({uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uTransformMatrix:{value:new I,type:"mat3x3<f32>"},uDistance:{value:4,type:"f32"},uRound:{value:0,type:"f32"}}),t=ne(),r=Nt({name:"sdf-shader",bits:[bs,ws(t),Hs,Ds,Yt]}),s=Kt({name:"sdf-shader",bits:[ys,Cs(t),Ls,$s,Xt]});super({glProgram:s,gpuProgram:r,resources:{localUniforms:e,batchSamplers:Ps(t)}})}}class ar{constructor(e){this._gpuBitmapText={},this._renderer=e}validateRenderable(e){const t=this._getGpuBitmapText(e);return e._didTextUpdate&&(e._didTextUpdate=!1,this._updateContext(e,t)),this._renderer.renderPipes.graphics.validateRenderable(t)}addRenderable(e,t){const r=this._getGpuBitmapText(e);gt(e,r),e._didTextUpdate&&(e._didTextUpdate=!1,this._updateContext(e,r)),this._renderer.renderPipes.graphics.addRenderable(r,t),r.context.customShader&&this._updateDistanceField(e)}destroyRenderable(e){this._destroyRenderableByUid(e.uid)}_destroyRenderableByUid(e){k.return(this._gpuBitmapText[e]),this._gpuBitmapText[e]=null}updateRenderable(e){const t=this._getGpuBitmapText(e);gt(e,t),this._renderer.renderPipes.graphics.updateRenderable(t),t.context.customShader&&this._updateDistanceField(e)}_updateContext(e,t){var f;const{context:r}=t,s=We.getFont(e.text,e._style);r.clear(),s.distanceField.type!=="none"&&(r.customShader||(this._sdfShader||(this._sdfShader=new js),r.customShader=this._sdfShader));const n=Array.from(e.text),a=e._style;let o=(((f=a._stroke)==null?void 0:f.width)||0)/2;o+=s.baseLineOffset;const l=Ht(n,a,s);let u=0;const c=a.padding,h=l.scale;r.translate(-e._anchor._x*l.width-c,-e._anchor._y*(l.height+l.offsetY)-c).scale(h,h);const d=a._fill.color;for(let p=0;p<l.lines.length;p++){const g=l.lines[p];for(let m=0;m<g.charPositions.length;m++){const _=n[u++],y=s.chars[_];y!=null&&y.texture&&r.texture(y.texture,d||"black",Math.round(g.charPositions[m]+y.xOffset),Math.round(o+y.yOffset))}o+=s.lineHeight}}_getGpuBitmapText(e){return this._gpuBitmapText[e.uid]||this.initGpuText(e)}initGpuText(e){const t=k.get(ae);return this._gpuBitmapText[e.uid]=t,this._updateContext(e,t),e.on("destroyed",()=>{this.destroyRenderable(e)}),this._gpuBitmapText[e.uid]}_updateDistanceField(e){const t=this._getGpuBitmapText(e).context,r=e._style.fontFamily,s=G.get(`${r}-bitmap`),{a:n,b:a,c:o,d:l}=e.groupTransform,u=Math.sqrt(n*n+a*a),c=Math.sqrt(o*o+l*l),h=(Math.abs(u)+Math.abs(c))/2,d=s.baseRenderedFontSize/e._style.fontSize,f=e.resolution??this._renderer.resolution,p=h*s.distanceField.range*(1/d)*f;t.customShader.resources.localUniforms.uniforms.uDistance=p}destroy(){var e;for(const t in this._gpuBitmapText)this._destroyRenderableByUid(t);this._gpuBitmapText=null,(e=this._sdfShader)==null||e.destroy(!0),this._sdfShader=null,this._renderer=null}}ar.extension={type:[S.WebGLPipes,S.WebGPUPipes,S.CanvasPipes],name:"bitmapText"};function gt(i,e){e.groupTransform=i.groupTransform,e.groupColorAlpha=i.groupColorAlpha,e.groupColor=i.groupColor,e.groupBlendMode=i.groupBlendMode,e.globalDisplayStatus=i.globalDisplayStatus,e.groupTransform=i.groupTransform,e.localDisplayStatus=i.localDisplayStatus,e.groupAlpha=i.groupAlpha,e._roundPixels=i._roundPixels}class or{constructor(e){this._gpuText=Object.create(null),this._renderer=e}validateRenderable(e){const t=this._getGpuText(e),r=e._getKey();return t.textureNeedsUploading?(t.textureNeedsUploading=!1,!0):t.currentKey!==r}addRenderable(e){const r=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),this._renderer.renderPipes.batch.addToBatch(r)}updateRenderable(e){const r=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),r.batcher.updateElement(r)}destroyRenderable(e){this._destroyRenderableById(e.uid)}_destroyRenderableById(e){const t=this._gpuText[e];this._renderer.htmlText.decreaseReferenceCount(t.currentKey),k.return(t.batchableSprite),this._gpuText[e]=null}_updateText(e){const t=e._getKey(),r=this._getGpuText(e),s=r.batchableSprite;r.currentKey!==t&&this._updateGpuText(e).catch(a=>{console.error(a)}),e._didTextUpdate=!1;const n=e._style.padding;Ue(s.bounds,e._anchor,s.texture,n)}async _updateGpuText(e){e._didTextUpdate=!1;const t=this._getGpuText(e);if(t.generatingTexture)return;const r=e._getKey();this._renderer.htmlText.decreaseReferenceCount(t.currentKey),t.generatingTexture=!0,t.currentKey=r;const s=e.resolution??this._renderer.resolution,n=await this._renderer.htmlText.getManagedTexture(e.text,s,e._style,e._getKey()),a=t.batchableSprite;a.texture=t.texture=n,t.generatingTexture=!1,t.textureNeedsUploading=!0,e.onViewUpdate();const o=e._style.padding;Ue(a.bounds,e._anchor,a.texture,o)}_getGpuText(e){return this._gpuText[e.uid]||this.initGpuText(e)}initGpuText(e){const t={texture:U.EMPTY,currentKey:"--",batchableSprite:k.get(qt),textureNeedsUploading:!1,generatingTexture:!1},r=t.batchableSprite;return r.renderable=e,r.texture=U.EMPTY,r.bounds={minX:0,maxX:1,minY:0,maxY:0},r.roundPixels=this._renderer._roundPixels|e._roundPixels,this._gpuText[e.uid]=t,e.on("destroyed",()=>{this.destroyRenderable(e)}),t}destroy(){for(const e in this._gpuText)this._destroyRenderableById(e);this._gpuText=null,this._renderer=null}}or.extension={type:[S.WebGLPipes,S.WebGPUPipes,S.CanvasPipes],name:"htmlText"};function Vs(){const{userAgent:i}=H.get().getNavigator();return/^((?!chrome|android).)*safari/i.test(i)}const Ns=new yt;function lr(i,e,t,r){const s=Ns;s.minX=0,s.minY=0,s.maxX=i.width/r|0,s.maxY=i.height/r|0;const n=W.getOptimalTexture(s.width,s.height,r,!1);return n.source.uploadMethodId="image",n.source.resource=i,n.source.alphaMode="premultiply-alpha-on-upload",n.frame.width=e/r,n.frame.height=t/r,n.source.emit("update",n.source),n.updateUvs(),n}function Ks(i,e){const t=e.fontFamily,r=[],s={},n=/font-family:([^;"\s]+)/g,a=i.match(n);function o(l){s[l]||(r.push(l),s[l]=!0)}if(Array.isArray(t))for(let l=0;l<t.length;l++)o(t[l]);else o(t);a&&a.forEach(l=>{const u=l.split(":")[1].trim();o(u)});for(const l in e.tagStyles){const u=e.tagStyles[l].fontFamily;o(u)}return r}async function Ys(i){const t=await(await H.get().fetch(i)).blob(),r=new FileReader;return await new Promise((n,a)=>{r.onloadend=()=>n(r.result),r.onerror=a,r.readAsDataURL(t)})}async function mt(i,e){const t=await Ys(e);return`@font-face {
        font-family: "${i.fontFamily}";
        src: url('${t}');
        font-weight: ${i.fontWeight};
        font-style: ${i.fontStyle};
    }`}const re=new Map;async function Xs(i,e,t){const r=i.filter(s=>G.has(`${s}-and-url`)).map((s,n)=>{if(!re.has(s)){const{url:a}=G.get(`${s}-and-url`);n===0?re.set(s,mt(e,a)):re.set(s,mt({fontWeight:t.fontWeight,fontStyle:t.fontStyle,fontFamily:s},a))}return re.get(s)});return(await Promise.all(r)).join(`
`)}function qs(i,e,t,r,s){const{domElement:n,styleElement:a,svgRoot:o}=s;n.innerHTML=`<style>${e.cssStyle}</style><div>${i}</div>`,n.setAttribute("style",`transform: scale(${t});transform-origin: top left; display: inline-block`),a.textContent=r;const{width:l,height:u}=s.image;return o.setAttribute("width",l.toString()),o.setAttribute("height",u.toString()),new XMLSerializer().serializeToString(o)}function Zs(i,e){const t=$.getOptimalCanvasAndContext(i.width,i.height,e),{context:r}=t;return r.clearRect(0,0,i.width,i.height),r.drawImage(i,0,0),$.returnCanvasAndContext(t),t.canvas}function Js(i,e,t){return new Promise(async r=>{t&&await new Promise(s=>setTimeout(s,100)),i.onload=()=>{r()},i.src=`data:image/svg+xml;charset=utf8,${encodeURIComponent(e)}`,i.crossOrigin="anonymous"})}class je{constructor(e){this._activeTextures={},this._renderer=e,this._createCanvas=e.type===q.WEBGPU}getTexture(e){return this._buildTexturePromise(e.text,e.resolution,e.style)}getManagedTexture(e,t,r,s){if(this._activeTextures[s])return this._increaseReferenceCount(s),this._activeTextures[s].promise;const n=this._buildTexturePromise(e,t,r).then(a=>(this._activeTextures[s].texture=a,a));return this._activeTextures[s]={texture:null,promise:n,usageCount:1},n}async _buildTexturePromise(e,t,r){const s=k.get($t),n=Ks(e,r),a=await Xs(n,r,Le.defaultTextStyle),o=is(e,r,a,s),l=Math.ceil(Math.ceil(Math.max(1,o.width)+r.padding*2)*t),u=Math.ceil(Math.ceil(Math.max(1,o.height)+r.padding*2)*t),c=s.image;c.width=l|0,c.height=u|0;const h=qs(e,r,t,a,s);await Js(c,h,Vs()&&n.length>0);let d=c;this._createCanvas&&(d=Zs(c,t));const f=lr(d,c.width,c.height,t);return this._createCanvas&&this._renderer.texture.initSource(f.source),k.return(s),f}_increaseReferenceCount(e){this._activeTextures[e].usageCount++}decreaseReferenceCount(e){const t=this._activeTextures[e];t&&(t.usageCount--,t.usageCount===0&&(t.texture?this._cleanUp(t):t.promise.then(r=>{t.texture=r,this._cleanUp(t)}).catch(()=>{X("HTMLTextSystem: Failed to clean texture")}),this._activeTextures[e]=null))}_cleanUp(e){W.returnTexture(e.texture),e.texture.source.resource=null,e.texture.source.uploadMethodId="unknown"}getReferenceCount(e){return this._activeTextures[e].usageCount}destroy(){this._activeTextures=null}}je.extension={type:[S.WebGLSystem,S.WebGPUSystem,S.CanvasSystem],name:"htmlText"};je.defaultFontOptions={fontFamily:"Arial",fontStyle:"normal",fontWeight:"normal"};class cr{constructor(e){this._gpuText=Object.create(null),this._renderer=e}validateRenderable(e){const t=this._getGpuText(e),r=e._getKey();if(t.currentKey!==r){const s=e.resolution??this._renderer.resolution,{width:n,height:a}=this._renderer.canvasText.getTextureSize(e.text,s,e._style);return!(this._renderer.canvasText.getReferenceCount(t.currentKey)===1&&n===t.texture._source.width&&a===t.texture._source.height)}return!1}addRenderable(e,t){const s=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),this._renderer.renderPipes.batch.addToBatch(s)}updateRenderable(e){const r=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),r.batcher.updateElement(r)}destroyRenderable(e){this._destroyRenderableById(e.uid)}_destroyRenderableById(e){const t=this._gpuText[e];this._renderer.canvasText.decreaseReferenceCount(t.currentKey),k.return(t.batchableSprite),this._gpuText[e]=null}_updateText(e){const t=e._getKey(),r=this._getGpuText(e),s=r.batchableSprite;r.currentKey!==t&&this._updateGpuText(e),e._didTextUpdate=!1;const n=e._style.padding;Ue(s.bounds,e._anchor,s.texture,n)}_updateGpuText(e){const t=this._getGpuText(e),r=t.batchableSprite;t.texture&&this._renderer.canvasText.decreaseReferenceCount(t.currentKey),t.texture=r.texture=this._renderer.canvasText.getManagedTexture(e),t.currentKey=e._getKey(),r.texture=t.texture}_getGpuText(e){return this._gpuText[e.uid]||this.initGpuText(e)}initGpuText(e){const t={texture:null,currentKey:"--",batchableSprite:k.get(qt)};return t.batchableSprite.renderable=e,t.batchableSprite.bounds={minX:0,maxX:1,minY:0,maxY:0},t.batchableSprite.roundPixels=this._renderer._roundPixels|e._roundPixels,this._gpuText[e.uid]=t,this._updateText(e),e.on("destroyed",()=>{this.destroyRenderable(e)}),t}destroy(){for(const e in this._gpuText)this._destroyRenderableById(e);this._gpuText=null,this._renderer=null}}cr.extension={type:[S.WebGLPipes,S.WebGPUPipes,S.CanvasPipes],name:"text"};function xt(i,e,t){for(let r=0,s=4*t*e;r<e;++r,s+=4)if(i[s+3]!==0)return!1;return!0}function _t(i,e,t,r,s){const n=4*e;for(let a=r,o=r*n+4*t;a<=s;++a,o+=n)if(i[o+3]!==0)return!1;return!0}function Qs(i,e=1){const{width:t,height:r}=i,s=i.getContext("2d",{willReadFrequently:!0});if(s===null)throw new TypeError("Failed to get canvas 2D context");const a=s.getImageData(0,0,t,r).data;let o=0,l=0,u=t-1,c=r-1;for(;l<r&&xt(a,t,l);)++l;if(l===r)return ie.EMPTY;for(;xt(a,t,c);)--c;for(;_t(a,t,o,l,c);)++o;for(;_t(a,t,u,l,c);)--u;return++u,++c,new ie(o/e,l/e,(u-o)/e,(c-l)/e)}class ur{constructor(e){this._activeTextures={},this._renderer=e}getTextureSize(e,t,r){const s=E.measureText(e||" ",r);let n=Math.ceil(Math.ceil(Math.max(1,s.width)+r.padding*2)*t),a=Math.ceil(Math.ceil(Math.max(1,s.height)+r.padding*2)*t);return n=Math.ceil(n-1e-6),a=Math.ceil(a-1e-6),n=Y(n),a=Y(a),{width:n,height:a}}getTexture(e,t,r,s){typeof e=="string"&&(T("8.0.0","CanvasTextSystem.getTexture: Use object TextOptions instead of separate arguments"),e={text:e,style:r,resolution:t}),e.style instanceof Z||(e.style=new Z(e.style));const{texture:n,canvasAndContext:a}=this.createTextureAndCanvas(e);return this._renderer.texture.initSource(n._source),$.returnCanvasAndContext(a),n}createTextureAndCanvas(e){const{text:t,style:r}=e,s=e.resolution??this._renderer.resolution,n=E.measureText(t||" ",r),a=Math.ceil(Math.ceil(Math.max(1,n.width)+r.padding*2)*s),o=Math.ceil(Math.ceil(Math.max(1,n.height)+r.padding*2)*s),l=$.getOptimalCanvasAndContext(a,o),{canvas:u}=l;this.renderTextToCanvas(t,r,s,l);const c=lr(u,a,o,s);if(r.trim){const h=Qs(u,s);c.frame.copyFrom(h),c.updateUvs()}return{texture:c,canvasAndContext:l}}getManagedTexture(e){const t=e._getKey();if(this._activeTextures[t])return this._increaseReferenceCount(t),this._activeTextures[t].texture;const{texture:r,canvasAndContext:s}=this.createTextureAndCanvas(e);return this._activeTextures[t]={canvasAndContext:s,texture:r,usageCount:1},r}_increaseReferenceCount(e){this._activeTextures[e].usageCount++}decreaseReferenceCount(e){const t=this._activeTextures[e];if(t.usageCount--,t.usageCount===0){$.returnCanvasAndContext(t.canvasAndContext),W.returnTexture(t.texture);const r=t.texture.source;r.resource=null,r.uploadMethodId="unknown",r.alphaMode="no-premultiply-alpha",this._activeTextures[e]=null}}getReferenceCount(e){return this._activeTextures[e].usageCount}renderTextToCanvas(e,t,r,s){var b,v,w,F,P;const{canvas:n,context:a}=s,o=oe(t),l=E.measureText(e||" ",t),u=l.lines,c=l.lineHeight,h=l.lineWidths,d=l.maxLineWidth,f=l.fontProperties,p=n.height;a.resetTransform(),a.scale(r,r);const g=t.padding*2;if(a.clearRect(0,0,l.width+4+g,l.height+4+g),(b=t._stroke)!=null&&b.width){const M=t._stroke;a.lineWidth=M.width,a.miterLimit=M.miterLimit,a.lineJoin=M.join,a.lineCap=M.cap}a.font=o;let m,_;const y=t.dropShadow?2:1;for(let M=0;M<y;++M){const R=t.dropShadow&&M===0,V=R?Math.ceil(Math.max(1,p)+t.padding*2):0,he=V*r;if(R){a.fillStyle="black",a.strokeStyle="black";const B=t.dropShadow,hr=B.color,dr=B.alpha;a.shadowColor=O.shared.setValue(hr).setAlpha(dr).toRgbaString();const fr=B.blur*r,Ke=B.distance*r;a.shadowBlur=fr,a.shadowOffsetX=Math.cos(B.angle)*Ke,a.shadowOffsetY=Math.sin(B.angle)*Ke+he}else a.globalAlpha=((v=t._fill)==null?void 0:v.alpha)??1,a.fillStyle=t._fill?le(t._fill,a):null,(w=t._stroke)!=null&&w.width&&(a.strokeStyle=le(t._stroke,a)),a.shadowColor="black";let Ve=(c-f.fontSize)/2;c-f.fontSize<0&&(Ve=0);const Ne=((F=t._stroke)==null?void 0:F.width)??0;for(let B=0;B<u.length;B++)m=Ne/2,_=Ne/2+B*c+f.ascent+Ve,t.align==="right"?m+=d-h[B]:t.align==="center"&&(m+=(d-h[B])/2),(P=t._stroke)!=null&&P.width&&this._drawLetterSpacing(u[B],t,s,m+t.padding,_+t.padding-V,!0),t._fill!==void 0&&this._drawLetterSpacing(u[B],t,s,m+t.padding,_+t.padding-V)}}_drawLetterSpacing(e,t,r,s,n,a=!1){const{context:o}=r,l=t.letterSpacing;let u=!1;if(E.experimentalLetterSpacingSupported&&(E.experimentalLetterSpacing?(o.letterSpacing=`${l}px`,o.textLetterSpacing=`${l}px`,u=!0):(o.letterSpacing="0px",o.textLetterSpacing="0px")),l===0||u){a?o.strokeText(e,s,n):o.fillText(e,s,n);return}let c=s;const h=E.graphemeSegmenter(e);let d=o.measureText(e).width,f=0;for(let p=0;p<h.length;++p){const g=h[p];a?o.strokeText(g,c,n):o.fillText(g,c,n);let m="";for(let _=p+1;_<h.length;++_)m+=h[_];f=o.measureText(m).width,c+=d-f+l,d=f}}destroy(){this._activeTextures=null}}ur.extension={type:[S.WebGLSystem,S.WebGPUSystem,S.CanvasSystem],name:"canvasText"};A.add(Bt);A.add(kt);A.add(Zt);A.add(Tr);A.add(er);A.add(ur);A.add(cr);A.add(ar,Es,Os);A.add(je);A.add(or);A.add(ir);A.add(sr);A.add(Ut);A.add(At);
